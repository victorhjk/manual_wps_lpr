{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"ParkingPlus: WPS_LPR Esta se\u00e7\u00e3o re\u00fane o manual e documenta\u00e7\u00f5es relacionados ao Parking Plus WPS_LPR. (L)icense (P)late (R)ecognition - Reconhecimento de Placas de Ve\u00edculos. O LPR \u00e9 um recurso que permite a identifica\u00e7\u00e3o de uma placa de ve\u00edculo no momento da sua entrada. A identifica\u00e7\u00e3o \u00e9 efetuada atrav\u00e9s do servi\u00e7o ParkingPlus:WPS_LPR que recebe as imagens das pistas atrav\u00e9s das c\u00e2meras que est\u00e3o instaladas para este fim, e executa o processo de OCR para obten\u00e7\u00e3o dos caracteres contido nas placas de ve\u00edculos. Para configurar o sistema operacional siga as etapas descritas na se\u00e7\u00e3o abaixo. Configura\u00e7\u00e3o Sistema Operacional .","title":"Inicio"},{"location":"index.html#parkingplus-wps_lpr","text":"Esta se\u00e7\u00e3o re\u00fane o manual e documenta\u00e7\u00f5es relacionados ao Parking Plus WPS_LPR. (L)icense (P)late (R)ecognition - Reconhecimento de Placas de Ve\u00edculos. O LPR \u00e9 um recurso que permite a identifica\u00e7\u00e3o de uma placa de ve\u00edculo no momento da sua entrada. A identifica\u00e7\u00e3o \u00e9 efetuada atrav\u00e9s do servi\u00e7o ParkingPlus:WPS_LPR que recebe as imagens das pistas atrav\u00e9s das c\u00e2meras que est\u00e3o instaladas para este fim, e executa o processo de OCR para obten\u00e7\u00e3o dos caracteres contido nas placas de ve\u00edculos. Para configurar o sistema operacional siga as etapas descritas na se\u00e7\u00e3o abaixo. Configura\u00e7\u00e3o Sistema Operacional .","title":"ParkingPlus: WPS_LPR"},{"location":"configuracao_sistema_operacional.html","text":"Configura\u00e7\u00e3o Sistema Operacional Nesse manual iremos abordar sobre a instala\u00e7\u00e3o dos pacotes necess\u00e1rios no sistema operacional que o servi\u00e7o ParkingPlus:WPS_LPR ir\u00e1 rodar. Pr\u00e9-Requisitos CentOS 7 Ubuntu Server 22.04 LTS (Recomendado) Debian 12 Entretanto por se tratar de container docker, tamb\u00e9m pode ser que funcione em outras distribui\u00e7\u00f5es e plataformas, por\u00e9m n\u00e3o foi testado. Instala\u00e7\u00e3o Sistema_Operacional Os seguintes procedimentos s\u00e3o necess\u00e1rios para o correto funcionamento do sistema WPS_LPR 1. Cria\u00e7\u00e3o de pastas /instalacoes /WPSBrasil sudo mkdir -p /instalacoes /WPSBrasil 2. Instala\u00e7\u00e3o de reposit\u00f3rios elrepo (centos) yum install https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm -y epel (centos) yum install epel-release -y 3. Atualiza\u00e7\u00e3o dos reposit\u00f3rios e sistema operacional CentOS sudo yum update -y Ubuntu sudo apt-get update && apt upgrade 4. Instala\u00e7\u00e3o de pacotes necess\u00e1rios wget nano ntpdate vim mlocate java-1.8.0-openjdk default-jdk pciutils python3 glances gdown CentOS yum install -y wget nano ntpdate vim mlocate java-1.8.0-openjdk \\ default-jdk pciutils python3 python3-pip pip3 install --upgrade pip pip install glances gdown py3nvml Ubuntu apt --fix-broken install apt-get install wget nano wget ntpdate vim mlocate default-jdk pciutils \\ apt-transport-https ca-certificates curl software-properties-common python3 python3-pip -y pip3 install --upgrade pip pip install glances gdown py3nvml 5. Instala\u00e7\u00e3o do Docker, docker-compose, nvidia-docker-container CentOS docker curl -fsSL https://get.docker.com/ | sh docker-compose sudo curl -L https://github.com/docker/compose/releases/download/v2.3.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose nvidia-container-toolkit curl -s -L https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo | \\ sudo tee /etc/yum.repos.d/nvidia-container-toolkit.repo sudo yum install -y nvidia-container-toolkit systemctl restart docker Ubuntu docker curl -fsSL https://get.docker.com/ | sh docker-compose sudo curl -L https://github.com/docker/compose/releases/download/v2.3.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose nvidia-container-toolkit curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\ && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\ sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\ sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list \\ && \\ sudo apt-get update sudo apt-get install -y nvidia-container-toolkit systemctl restart docker 5.1. Execute o seguinte comando para configurar o daemon do docker: nvidia-ctk runtime configure --runtime=docker --config=/etc/docker/daemon.json systemctl restart docker.service 6. Instala\u00e7\u00e3o de Drivers Nvidia (Quando GPU dispon\u00edvel) Centos yum -y install nvidia-detect yum install -y kmod-nvidia yum remove -y xorg-x11-drivers xorg-x11-drv-nouveau Ubuntu sudo apt install nvidia-driver-535 nvidia-dkms-535 -y 7. Exportar v\u00e1rivel que controla uso de GPU ou n\u00e3o. 7.1. Exportar vari\u00e1vel de ambiente para o docker enxergar se existe placa de v\u00eddeo instalada na m\u00e1quina, somente em caso de GPU . echo \"export NVIDIA_VISIBLE_DEVICES=all\" >> ~/.bashrc 7.2. Exportar vari\u00e1vel de ambiente caso n\u00e3o haja GPU . echo \"export NVIDIA_VISIBLE_DEVICES=void\" >> ~/.bashrc 7.3. Exportando o nome da m\u00e1quina para o bashrc. Voc\u00ea pode alterar o nome da m\u00e1quina para corresponder ao nome da garagem, basta substituir WPS_LPR_Dev, por WPS_LPR_(nome_da_garagem) echo \"PS1='\\[\\033[1;31m\\]\\u\\[\\033[0;32m\\]@WPS_LPR_Dev\\[\\e[m\\] \\[\\e[1;34m\\]\\w\\[\\e[m\\] \\[\\e[1;32m\\]\\$\\[\\e[m\\] \\[\\e[1;37m\\]'\" >> ~/.bashrc >> ~/.bashrc source ~/.bashrc 8. Desabilitando a duplica\u00e7\u00e3o de logs do journal para o syslog echo \"if \\$programname == 'WpsLprConcentrator' then /dev/null\" >> /etc/rsyslog.conf sed -i -e 's/^$ModLoad imuxsock/#$ModLoad imuxsock/' -e 's/^$ModLoad imjournal/#$ModLoad imjournal/' /etc/rsyslog.conf sed -i -e 's/^module(load=\"imuxsock\")/#module(load=\"imuxsock\")/' -e 's/^module(load=\"imjournal\")/#module(load=\"imjournal\")/' /etc/rsyslog.conf systemctl restart rsyslog 9. Habilitando modo de performance da m\u00e1quina ( importante ) CentOS gdown 1Roq8tn0COhY-OSrUy_YRNEQuZzdnM4Uu rpm -ivh set_performance-1.0-1.x86_64.rpm systemctl start set_performance.service systemctl enable set_performance.service Ubuntu gdown 1NxFukxgIMhfG5xfh076dxFkglCtHjO4S dpkg -i set-performance_1.0-2_amd64.deb systemctl start set_performance.service systemctl enable set_performance.service","title":"Configura\u00e7\u00e3o Sistema Operacional"},{"location":"configuracao_sistema_operacional.html#configuracao-sistema-operacional","text":"Nesse manual iremos abordar sobre a instala\u00e7\u00e3o dos pacotes necess\u00e1rios no sistema operacional que o servi\u00e7o ParkingPlus:WPS_LPR ir\u00e1 rodar.","title":"Configura\u00e7\u00e3o Sistema Operacional"},{"location":"configuracao_sistema_operacional.html#pre-requisitos","text":"CentOS 7 Ubuntu Server 22.04 LTS (Recomendado) Debian 12 Entretanto por se tratar de container docker, tamb\u00e9m pode ser que funcione em outras distribui\u00e7\u00f5es e plataformas, por\u00e9m n\u00e3o foi testado.","title":"Pr\u00e9-Requisitos"},{"location":"configuracao_sistema_operacional.html#instalacao","text":"","title":"Instala\u00e7\u00e3o"},{"location":"configuracao_sistema_operacional.html#sistema_operacional","text":"Os seguintes procedimentos s\u00e3o necess\u00e1rios para o correto funcionamento do sistema WPS_LPR","title":"Sistema_Operacional"},{"location":"configuracao_sistema_operacional.html#1-criacao-de-pastas","text":"/instalacoes /WPSBrasil sudo mkdir -p /instalacoes /WPSBrasil","title":"1. Cria\u00e7\u00e3o de pastas"},{"location":"configuracao_sistema_operacional.html#2-instalacao-de-repositorios","text":"elrepo (centos) yum install https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm -y epel (centos) yum install epel-release -y","title":"2. Instala\u00e7\u00e3o de reposit\u00f3rios"},{"location":"configuracao_sistema_operacional.html#3-atualizacao-dos-repositorios-e-sistema-operacional","text":"CentOS sudo yum update -y Ubuntu sudo apt-get update && apt upgrade","title":"3. Atualiza\u00e7\u00e3o dos reposit\u00f3rios e sistema operacional"},{"location":"configuracao_sistema_operacional.html#4-instalacao-de-pacotes-necessarios","text":"wget nano ntpdate vim mlocate java-1.8.0-openjdk default-jdk pciutils python3 glances gdown CentOS yum install -y wget nano ntpdate vim mlocate java-1.8.0-openjdk \\ default-jdk pciutils python3 python3-pip pip3 install --upgrade pip pip install glances gdown py3nvml Ubuntu apt --fix-broken install apt-get install wget nano wget ntpdate vim mlocate default-jdk pciutils \\ apt-transport-https ca-certificates curl software-properties-common python3 python3-pip -y pip3 install --upgrade pip pip install glances gdown py3nvml","title":"4. Instala\u00e7\u00e3o de pacotes necess\u00e1rios"},{"location":"configuracao_sistema_operacional.html#5-instalacao-do-docker-docker-compose-nvidia-docker-container","text":"","title":"5. Instala\u00e7\u00e3o do Docker, docker-compose, nvidia-docker-container"},{"location":"configuracao_sistema_operacional.html#centos","text":"docker curl -fsSL https://get.docker.com/ | sh docker-compose sudo curl -L https://github.com/docker/compose/releases/download/v2.3.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose nvidia-container-toolkit curl -s -L https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo | \\ sudo tee /etc/yum.repos.d/nvidia-container-toolkit.repo sudo yum install -y nvidia-container-toolkit systemctl restart docker","title":"CentOS"},{"location":"configuracao_sistema_operacional.html#ubuntu","text":"docker curl -fsSL https://get.docker.com/ | sh docker-compose sudo curl -L https://github.com/docker/compose/releases/download/v2.3.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose nvidia-container-toolkit curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\ && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\ sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\ sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list \\ && \\ sudo apt-get update sudo apt-get install -y nvidia-container-toolkit systemctl restart docker","title":"Ubuntu"},{"location":"configuracao_sistema_operacional.html#51-execute-o-seguinte-comando-para-configurar-o-daemon-do-docker","text":"nvidia-ctk runtime configure --runtime=docker --config=/etc/docker/daemon.json systemctl restart docker.service","title":"5.1. Execute o seguinte comando para configurar o daemon do docker:"},{"location":"configuracao_sistema_operacional.html#6-instalacao-de-drivers-nvidia-quando-gpu-disponivel","text":"Centos yum -y install nvidia-detect yum install -y kmod-nvidia yum remove -y xorg-x11-drivers xorg-x11-drv-nouveau Ubuntu sudo apt install nvidia-driver-535 nvidia-dkms-535 -y","title":"6. Instala\u00e7\u00e3o de Drivers Nvidia (Quando GPU dispon\u00edvel)"},{"location":"configuracao_sistema_operacional.html#7-exportar-varivel-que-controla-uso-de-gpu-ou-nao","text":"","title":"7. Exportar v\u00e1rivel que controla uso de GPU ou n\u00e3o."},{"location":"configuracao_sistema_operacional.html#71-exportar-variavel-de-ambiente-para-o-docker-enxergar-se-existe-placa-de-video-instalada-na-maquina-somente-em-caso-de-gpu","text":"echo \"export NVIDIA_VISIBLE_DEVICES=all\" >> ~/.bashrc","title":"7.1. Exportar vari\u00e1vel de ambiente para o docker enxergar se existe placa de v\u00eddeo instalada na m\u00e1quina, somente em caso de GPU."},{"location":"configuracao_sistema_operacional.html#72-exportar-variavel-de-ambiente-caso-nao-haja-gpu","text":"echo \"export NVIDIA_VISIBLE_DEVICES=void\" >> ~/.bashrc","title":"7.2. Exportar vari\u00e1vel de ambiente caso n\u00e3o haja GPU."},{"location":"configuracao_sistema_operacional.html#73-exportando-o-nome-da-maquina-para-o-bashrc","text":"Voc\u00ea pode alterar o nome da m\u00e1quina para corresponder ao nome da garagem, basta substituir WPS_LPR_Dev, por WPS_LPR_(nome_da_garagem) echo \"PS1='\\[\\033[1;31m\\]\\u\\[\\033[0;32m\\]@WPS_LPR_Dev\\[\\e[m\\] \\[\\e[1;34m\\]\\w\\[\\e[m\\] \\[\\e[1;32m\\]\\$\\[\\e[m\\] \\[\\e[1;37m\\]'\" >> ~/.bashrc >> ~/.bashrc source ~/.bashrc","title":"7.3. Exportando o nome da m\u00e1quina para o bashrc."},{"location":"configuracao_sistema_operacional.html#8-desabilitando-a-duplicacao-de-logs-do-journal-para-o-syslog","text":"echo \"if \\$programname == 'WpsLprConcentrator' then /dev/null\" >> /etc/rsyslog.conf sed -i -e 's/^$ModLoad imuxsock/#$ModLoad imuxsock/' -e 's/^$ModLoad imjournal/#$ModLoad imjournal/' /etc/rsyslog.conf sed -i -e 's/^module(load=\"imuxsock\")/#module(load=\"imuxsock\")/' -e 's/^module(load=\"imjournal\")/#module(load=\"imjournal\")/' /etc/rsyslog.conf systemctl restart rsyslog","title":"8. Desabilitando a duplica\u00e7\u00e3o de logs do journal para o syslog"},{"location":"configuracao_sistema_operacional.html#9-habilitando-modo-de-performance-da-maquina-importante","text":"CentOS gdown 1Roq8tn0COhY-OSrUy_YRNEQuZzdnM4Uu rpm -ivh set_performance-1.0-1.x86_64.rpm systemctl start set_performance.service systemctl enable set_performance.service Ubuntu gdown 1NxFukxgIMhfG5xfh076dxFkglCtHjO4S dpkg -i set-performance_1.0-2_amd64.deb systemctl start set_performance.service systemctl enable set_performance.service","title":"9. Habilitando modo de performance da m\u00e1quina (importante)"},{"location":"erros.html","text":"Erros comuns Erros de importa\u00e7\u00e3o do imagem Erros de execu\u00e7\u00e3o","title":"Erros Comuns"},{"location":"erros.html#erros-comuns","text":"","title":"Erros comuns"},{"location":"erros.html#erros-de-importacao-do-imagem","text":"","title":"Erros de importa\u00e7\u00e3o do imagem"},{"location":"erros.html#erros-de-execucao","text":"","title":"Erros de execu\u00e7\u00e3o"},{"location":"execucao.html","text":"Execu\u00e7\u00e3o Siga essas etapas para executar o sistema de reconhecimento de placas de ve\u00edculos WPS_LPR: Configura\u00e7\u00e3o das c\u00e2meras 1. Configure a conex\u00e3o da(s) c\u00e2mera(s) no arquivo: /var/lib/ParkingPlus/WpsLpr/config/config.json 1.1 Aqui est\u00e1 um exemplo de como o arquivo config.json deve ser configurado para o funcionamento do sistema WPS_LPR , podem ser adicionadas v\u00e1rias c\u00e2meras para o processamento dentro do limite de processamento da m\u00e1quina. [ { \"camera_id\": \"1\", \"camera_type\": \"lpr\", \"camera_brand\": \"intelbras\", \"wps_topic\": \"WPS_LPR\", \"camera_ip\": \"192.168.1.108\", \"user\": \"wps\", \"password\": \"wpsbrasil2021\", \"channel_dvr\": \"1\", \"frame_ocr_rate\": 10, \"roi_size_x\": 1280, \"roi_size_y\": 720, \"roi_x\": 0, \"roi_y\": 0, \"limiar\": 20, \"plate_size_min\": 0, \"plate_size_max\": 0, \"image_size\": 0, \"ocr_mode\": 0, \"ocr_time\": 1, \"sector_id\": 1, \"parking_name\": \"\", \"protocol\": \"udp\", \"power_led\": 40, \"publish_interval\": 1000, \"parking_spaces_quantity\": 1, \"park_ids\": [] } ] Remova quaisquer coment\u00e1rios caso use esse exemplo. camera_id \u00e9 um n\u00famero sequencial que identifica a c\u00e2mera no arquivo e seus demais atributos; camera_ip \u00e9 o ip da c\u00e2mera que ser\u00e1 conectada; wps_topic t\u00f3pico do MQTT que as mensagens ser\u00e3o publicadas; user usu\u00e1rio da c\u00e2mera; password senha da c\u00e2mera; channel_dvr canal para conex\u00e3o com a c\u00e2mera, geralmente \u00e9 \"1\", quando for utilizar conex\u00e3o via DVR ou NVR verificar o n\u00famero do canal para se conectar; camera_brand \u00e9 a marca da c\u00e2mera, os modelos homologados s\u00e3o: \"intelbras\" ; \"hikvision\" ; \"positivo\" ; \"pumatronix\" . frame_ocr_rate \u00e9 a taxa de fps que ser\u00e1 passada para a c\u00e2mera, o WPS_LPR por default faz o OCR em uma imagem por segundo de cada c\u00e2mera, por\u00e9m ele n\u00e3o est\u00e1 mais vinculado a essa chave. PS : Para c\u00e2meras Hikvision e Intelbr\u00e1s mais atuais, utilize 25 ou 30; roi_size \u00e9 o tamanho da imagem que ser\u00e1 passada para o WPS_LPR fazer o OCR na imagem, o padr\u00e3o \u00e9 1280 para a largura e 720 para a altura; roi s\u00e3o os pontos iniciais para desenho de um ret\u00e2ngulo na imagem, para limitar a \u00e1rea de atua\u00e7\u00e3o do OCR na imagem. Um objetivo por exemplo \u00e9 que n\u00e3o seja feito OCR em pistas vizinhas; ocr_mode \u00e9 o tipo poss\u00edvel de OCR nos tipos de ve\u00edculos, que s\u00e3o: \"0\" somente carro; \"1\" somente moto; \"2\" carro e moto. camera_type \u00e9 o tipo de utiliza\u00e7\u00e3o que a c\u00e2mera ter\u00e1 no sistema WPS_LPR, que poder\u00e1 ser: \"lpr\" : Para reconhecimento das placas de ve\u00edculos; \"context\" : Para capturar fotos de c\u00e2meras de contexto, c\u00e2meras que ser\u00e3o posicionadas com o intuito de registrar diversas faces dos ve\u00edculos e do usu\u00e1rio do estacionamento; \"segmentation\" : Para utiliza\u00e7\u00e3o de reconhecimento de placas em vagas espec\u00edficas do estacionamento, bem como identificar se a vaga est\u00e1 livre ou ocupada. Cada c\u00e2mera poder\u00e1 monitorar de 1 a 4 vagas. limiar \u00e9 a quantidade de movimento para ativar o LPR, ou seja submeter o frame \u00e0 biblioteca de reconhecimento, caso a quantidade de movimento seja menor que o limiar, o frame ser\u00e1 descartado, at\u00e9 que a quantidade seja alcan\u00e7ada. Caso a quantidade seja superior ao limiar, e nos frames seguintes seja menor, o sistema verificar\u00e1 no \u00faltimo frame submetido, se houve placa detectada, caso sim, ele envia mais um frame, at\u00e9 que nenhuma placa seja detectada e n\u00e3o haja quantidade de movimento superior ao limiar. image_size \u00e9 o tamanho das imagens que ser\u00e3o enviadas na mensagem, os valores s\u00e3o: \"0\" 1280 x 720; \"1\" 800 x 450; \"2\" 640 x 360; \"9\" Sem imagem. plate_size_min \u00e9 o tamanho m\u00ednimo da placa para ser submetido ao OCR (0 \u00e9 desligado). plate_size_max \u00e9 o tamanho m\u00e1ximo da placa para ser submetido ao OCR (0 \u00e9 desligado). Esse valor deve ser obrigatoriamente maior que o \"plate_size_min\". ocr_time \u00e9 a quantidade de imagens por segundo que ser\u00e3o submetidas ao OCR no modo \" lpr \", este valor varia de 1 a 4 imagens por segundo, o padr\u00e3o \u00e9 1 por segundo, s\u00f3 aumente esse n\u00famero caso tenha reserva de recursos de processamento no Servidor de LPR. J\u00e1 no modo \" Segmentation \" \u00e9 o tempo em que uma imagem ser\u00e1 submetida ao OCR, esse tempo \u00e9 entre 10 e 40 segundos, o padr\u00e3o \u00e9 15 segundos. sector_id \u00e9 o ID do setor onde a c\u00e2mera \" segmentation \" est\u00e1 instalada, isso reflete na tarifa\u00e7\u00e3o do setor. parking_name \u00e9 o nome do setor, \u00e9 opcional. protocol \u00e9 o tipo de protocolo que ser\u00e1 usado para fazer o streaming das c\u00e2meras, o padr\u00e3o \u00e9 UDP, s\u00f3 use o protocolo TCP para fazer debug no sistema. power_led \u00e9 a pot\u00eancia do LED para c\u00e2meras Pumatronix, que contam com a luz branca, o padr\u00e3o \u00e9 40, \u00e9 importante verificar o funcionamento para evitar que a imagem da placa \"estoure\". publish_interval \u00e9 o tempo que a \"melhor\" placa ser\u00e1 publicada no MQTT, como agora a quantidade de OCR por segundo pode ser alterada, \u00e9 importante n\u00e3o \"inundar\" o terminal com v\u00e1rias publica\u00e7\u00f5es de placas, sendo assim, mesmo que a quantidade de OCR seja 4, ele ir\u00e1 publicar apenas 1 por segundo caso o tempo aqui seja 1000, e tamb\u00e9m com o intuito de melhorar a performance dos terminais com Mini PCs defasados, pode-se aumentar esse tempo, sem correr o risco de perder imagens para OCR como no m\u00e9todo antigo, antes era poss\u00edvel fazer 1 OCR a cada 2 segundos, agora \u00e9 poss\u00edvel fazer 2 OCRs em 2 segundos, e enviar apenas 1 placa a cada 2 segundos. Por padr\u00e3o o tempo \u00e9 1000, e ele varia entre 800 e 2000. parking_spaces_quantity \u00e9 a quantidade de vagas que ser\u00e3o monitoradas no m\u00e9todo \" segmentation \", entre 1 e 4 vagas. park_ids s\u00e3o os ids das vagas que ser\u00e3o monitoradas no m\u00e9todo \" segmentation \", entre 1 e 4 vagas. 1.2 Para adicionar outras c\u00e2meras basta seguir o layout, e repetir os par\u00e2metros com seus devidos valores. 1.3 Caso seja uma migra\u00e7\u00e3o e exista um arquivo supervisord.conf com as configura\u00e7\u00f5es das c\u00e2meras, pode-se utilizar um conversor de supervisor para json, execute os passos abaixo para us\u00e1-lo. gdown 1UVEM4WeaugcTujOQ7G2MPVBP3RPlPsp_ chmod +x converter_sup_to_docker ./converter_sup_to_docker Isso ir\u00e1 gerar um config.json na pasta /instalacoes, que poder\u00e1 ser copiado para o docker fazer a leitura das c\u00e2meras. Funcionamento do sistema WPS_LPR 2. O sistema assim que o container for iniciado j\u00e1 estar\u00e1 funcionando com as c\u00e2meras cadastradas no arquivo /var/lib/ParkingPlus/WpsLpr/config/config.json , qualquer altera\u00e7\u00e3o no arquivo o sistema processar\u00e1 as altera\u00e7\u00f5es, e far\u00e1 a devida a\u00e7\u00e3o, que poder\u00e1 ser adicionar uma nova c\u00e2mera, remover uma c\u00e2mera, alterar algum par\u00e2metro de alguma c\u00e2mera: Consultando Logs do Sistema 3. As informa\u00e7\u00f5es do sistema WPS_LPR, poder\u00e3o ser consultadas pelo log journal , pelo comando: journalctl CONTAINER_TAG=ParkingPlus:WPS_LPR Oportunamente pode se passar o par\u00e2metro -f, para visualizar o log em tempo real. journalctl -f CONTAINER_TAG=ParkingPlus:WPS_LPR --output cat .code-block { font-size: 0.7em; /* Ajusta o tamanho da fonte */ white-space: pre-wrap; /* Permite quebras de linha no conte\u00fado pre */ } Exemplo de C\u00f3digo 3.1 A sa\u00edda do comando ser\u00e1 conforme abaixo: Clique para expandir 2000-01-01 00:00:54.033 | INFO: ENT_PRINC_3_FRONTAL | [SNAPSHOT] | Placa detectada: PRZ4B93 | Tipo de Ve\u00edculo: CAR | Marca/Modelo do Ve\u00edculo: VOLKSWAGEN - POLO 2000-01-01 00:00:54.525 | INFO: ENT_PRINC_2_FRONTAL | [SNAPSHOT] | Placa detectada: JIR0H44 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:01.109 | INFO: ENT_PRINC_1_FRONTAL | [SNAPSHOT] | Placa detectada: JJV7842 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:04.525 | INFO: ENT_PRINC_1_TRASEIRA | [SNAPSHOT] | Placa detectada: JJV7842 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:05.330 | INFO: ENT_PRINC_1_FRONTAL | [SNAPSHOT] | Placa detectada: JJV7842 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:08.327 | INFO: ENT_SUL_1_FRONTAL | [SNAPSHOT] | Placa detectada: PRO6225 | Tipo de Ve\u00edculo: CAR | Marca/Modelo do Ve\u00edculo: TOYOTA - YARIS 2000-01-01 00:01:11.355 | INFO: ENT_SUL_1_TRASEIRA | [SNAPSHOT] | Placa detectada: PRO6225 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:12.203 | INFO: ENT_SUL_1_FRONTAL | [SNAPSHOT] | Placa detectada: PRO6225 | Tipo de Ve\u00edculo: CAR | Marca/Modelo do Ve\u00edculo: TOYOTA - YARIS 2000-01-01 00:01:20.439 | INFO: ENT_TOK_STOK_2_FRONTAL | [SNAPSHOT] | Placa detectada: SDK5G47 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:33.051 | INFO: ENT_SUL_2_FRONTAL | [SNAPSHOT] | Placa detectada: SSG1C35 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:36.270 | INFO: ENT_SUL_2_TRASEIRA | [SNAPSHOT] | Placa detectada: SSG1C35 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:37.016 | INFO: ENT_SUL_2_FRONTAL | [SNAPSHOT] | Placa detectada: SSG1C35 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:38.034 | INFO: SAI_2_SUL_FRENTE | [SNAPSHOT] | Placa detectada: SYV8D43 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:41.138 | INFO: SAI_2_SUL_TRASEIRA | [SNAPSHOT] | Placa detectada: SYV8D43 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:41.974 | INFO: SAI_2_SUL_FRENTE | [SNAPSHOT] | Placa detectada: SYV8D43 | Tipo de Ve\u00edculo: CAR | Marca/Modelo do Ve\u00edculo: FIAT - ARGO 2000-01-01 00:01:42.363 | INFO: ENT_TOK_STOK_1_FRONTAL | [SNAPSHOT] | Placa detectada: SCQ1H08 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:46.859 | INFO: ENT_TOK_STOK_1_FRONTAL | [SNAPSHOT] | Placa detectada: SCQ1H08 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:47.560 | INFO: SAI_SUL_3_TRASEIRA | [SNAPSHOT] | Placa detectada: PQH2967 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:49.070 | INFO: SAI_SUL_3_FRONTAL | [SNAPSHOT] | Placa detectada: PQH2967 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:57.925 | INFO: ENT_PRINC_2_FRONTAL | [SNAPSHOT] | Placa detectada: NDO7C97 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:58.670 | INFO: ENT_3_NORTE_FRENTE | [SNAPSHOT] | Placa detectada: QUH3A03 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:59.684 | INFO: ENT_PRINC_2_TRASEIRA | [SNAPSHOT] | Placa detectada: NDO7C97 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:02:01.278 | INFO: ENT_3_NORTE_TRASEIRA | [SNAPSHOT] | Placa detectada: QUH3A03 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:03:28.210 | INFO: ENT_MOTO_1 | Frame n\u00famero: 705 | Placa: SCN3A36 | Confianca: 1.0 2000-01-01 00:03:29.215 | INFO: ENT_MOTO_1 | Frame n\u00famero: 706 | Placa: SCN3A36 | Confianca: 1.0 2000-01-01 00:03:30.218 | INFO: ENT_MOTO_1 | Frame n\u00famero: 707 | Placa: SCN3A36 | Confianca: 1.0 2000-01-01 00:03:31.224 | INFO: ENT_MOTO_1 | Frame n\u00famero: 708 | Placa: SCN3A36 | Confianca: 1.0 Alterando n\u00edvel de log 4. Para alterar o n\u00edvel de log, altere o arquivo: /var/lib/ParkingPlus/WpsLpr/config/settings.xml Caso o arquivo n\u00e3o exista, utilize o sample na pasta para cri\u00e1-lo, e altere o n\u00edvel caso seja necess\u00e1rio. O log vem configurado com n\u00edvel INFO , que exibe as informa\u00e7\u00f5es conforme acima, caso queira depurar alguma informa\u00e7\u00e3o, como o tempo gasto em cada etapa, altere para DEBUG ou TRACE , e ap\u00f3s as analises realizadas, retorne para INFO . <settings> <log_level>INFO</log_level> </settings> 4.1 A partir da vers\u00e3o 2.6.0 a mudan\u00e7a no n\u00edvel do LOG ser\u00e1 din\u00e2mica, ou seja ao alterar no arquivo o LOG j\u00e1 passar\u00e1 a exibir o LOG nesse n\u00edvel sem a necessidade de reiniciar a aplica\u00e7\u00e3o. Verificando c\u00e2meras online no sistema 5. Para verificar quantas e quais c\u00e2meras s\u00e3o, \u00e9 necess\u00e1rio fazer uma requisi\u00e7\u00e3o GET HTTP, no seguinte endpoint: http://ip_do_servidor_lpr:5000/api/v0/running_cameras 5.1 O retorno da requisi\u00e7\u00e3o ser\u00e1 algo do tipo: Clique para expandir { \"Cameras online\": { \"LPR\": [ \"ENT_MOTO_2 - 192.168.8.127 (Online)\", \"SAI_MOTO_1 - 192.168.8.143 (Online)\", \"SAI_MOTO_2 - 192.168.8.144 (Online)\", \"ENT_MOTO_1 - 192.168.8.126 (Online)\" ], \"WPS 360\": [ \"ENT_PRINC_2_TRASEIRA - 192.168.20.199 (Online)\", \"ENT_PRINC_3_TRASEIRA - 192.168.20.190 (Online)\", ... \"SAI_SUL_3_FRONTAL - 192.168.20.196 (Online)\", \"SAI_PRINC_3_FRONTAL - 192.168.20.219 (Online)\" ] }, \"Total de cameras online\": 54, \"Cameras offline\": { \"WPS 360\": [ \"SAI_LOJISTA_FRONTAL - 192.168.20.38 (Offline)\", \"ENT_LOJISTA_TRASEIRA - 192.168.20.112 (Offline)\" ] }, \"Total de cameras offline\": 2 } Solicitando um snapshot de uma c\u00e2mera 6. Para solicitar um snapshot, \u00e9 necess\u00e1rio fazer uma requisi\u00e7\u00e3o GET HTTP, no seguinte endpoint: http://ip_do_servidor_lpr:5000/api/v0/snapshot 6.1 \u00c9 necess\u00e1rio passar tamb\u00e9m o argumento wps_topic , exemplo: http://127.0.0.1:5000/api/v0/snapshot?wps_topic=TESTE O sistema retornar\u00e1 imediatamente a \u00faltima imagem salva em buffer referente ao wps_topic fornecido. Segue um exemplo de resposta da solicita\u00e7\u00e3o enviada: { \"timestamp\": timestamp, \"object_type\": object_type, \"imagem\": { \"data\": snapshot_lpr, \"type\": \"image/jpg\", } } As imagens est\u00e3o codificadas em base64, com resolu\u00e7\u00e3o 1280x720 e formato JPG. Verificando quantidade de Threads 7. Para verificar quantas threads do sistema WPS_LPR est\u00e3o ativas, basta fazer uma requisi\u00e7\u00e3o GET HTTP no endpoint abaixo: http://ip_do_servidor_lpr:5000/api/v0/threads O retorno ser\u00e1 a quantidade de threads em execu\u00e7\u00e3o, usado para DEBUG. 7.1 Para verificar o nome das threads em execu\u00e7\u00e3o no sistema WPS_LPR, fa\u00e7a uma requisi\u00e7\u00e3o GET HTTP no endpoint: http://ip_do_servidor_lpr:5000/api/v0/threads_details O retorno ser\u00e1 o detalhamento das threads, para ajudar no processo de DEBUG. Clique para expandir { \"thread_details\": [ { \"name\": \"MainThread\", \"id\": 139885484580992 }, { \"name\": \"MonitorLogLevel\", \"id\": 139885465700032 }, { \"name\": \"pymongo_server_monitor_thread\", \"id\": 139883041511104 }, { \"name\": \"pymongo_kill_cursors_thread\", \"id\": 139883145090752 }, { \"name\": \"pymongo_server_rtt_thread\", \"id\": 139882454316736 }, { \"name\": \"Inotify (InotifyBuffer)\", \"id\": 139884727596736 }, { \"name\": \"Inotify (InotifyEmitter)\", \"id\": 139884735989440 }, { \"name\": \"Inotify (InotifyObserver)\", \"id\": 139884878599872 }, { \"name\": \"JSON monitoring\", \"id\": 139884886992576 }, { \"name\": \"Webserver WPS_LPR\", \"id\": 139885328078528 }, { \"name\": \"Schedule\", \"id\": 139885319685824 }, { \"name\": \"ThreadPoolExecutor-3_0\", \"id\": 139885172213440 }, { \"name\": \"ThreadPoolExecutor-3_1\", \"id\": 139884895385280 }, { \"name\": \"ThreadPoolExecutor-3_2\", \"id\": 139883058296512 }, { \"name\": \"ThreadPoolExecutor-3_3\", \"id\": 139883049903808 }, { \"name\": \"MQTT: SAI_MOTO_1\", \"id\": 139875802146496 }, { \"name\": \"MQTT: ENT_MOTO_1\", \"id\": 139880675927744 }, { \"name\": \"MQTT: ENT_MOTO_2\", \"id\": 139878863976128 }, { \"name\": \"Thread-826\", \"id\": 139878880761536 } ], \"thread_types\": { \"MainThread\": 1, \"Daemon Threads\": 8, \"ThreadPoolExecutor\": 4, \"Inotify\": 3, \"Others\": 3 }, \"total_active_threads\": 19 } Exibindo a vers\u00e3o do WPS_LPR 8. Para verificar a vers\u00e3o do sistema, fa\u00e7a uma requisi\u00e7\u00e3o GET HTTP no endpoint abaixo: http://ip_do_servidor_lpr:5000/api/v0/version { \"version\": \"2.9.0\" } Verificando as conex\u00f5es no WPS_LPR 9. Para verificar todas as conex\u00f5es configuradas no sistema WPS_LPR, fa\u00e7a uma requisi\u00e7\u00e3o GET HTTP no endpoint: http://ip_do_servidor_lpr:5000/api/v0/connections O retorno ser\u00e1 a listagem das conex\u00f5es configuradas no sistema. Clique para expandir { \"lpr\": [ { \"camera_id\": \"1\", \"wps_topic\": \"ENT_MOTO_1\", \"camera_ip\": \"192.168.8.126\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Moto\", \"publish_interval\": \"1000 ms\" }, { \"camera_id\": \"2\", \"wps_topic\": \"ENT_MOTO_2\", \"camera_ip\": \"192.168.8.127\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Moto\", \"publish_interval\": \"1000 ms\" }, { \"camera_id\": \"3\", \"wps_topic\": \"SAI_MOTO_1\", \"camera_ip\": \"192.168.8.143\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Moto\", \"publish_interval\": \"1000 ms\" }, { \"camera_id\": \"4\", \"wps_topic\": \"SAI_MOTO_2\", \"camera_ip\": \"192.168.8.144\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Moto\", \"publish_interval\": \"1000 ms\" } ], \"context\": [ { \"camera_id\": \"5\", \"wps_topic\": \"ENT_PRINC_1_FRONTAL\", \"camera_ip\": \"192.168.20.193\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Carro\", \"publish_interval\": \"1000 ms\" }, ... { \"camera_id\": \"55\", \"wps_topic\": \"SAI_2_SUL_FRENTE\", \"camera_ip\": \"192.168.20.225\", \"ocr_time\": \"0/seg\", \"ocr_mode\": \"Carro\", \"publish_interval\": \"0 ms\" }, { \"camera_id\": \"56\", \"wps_topic\": \"SAI_2_SUL_TRASEIRA\", \"camera_ip\": \"192.168.20.195\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Carro e Moto\", \"publish_interval\": \"1000 ms\" } ] } Reiniciando a aplica\u00e7\u00e3o 10. Para reiniciar o sistema WPS_LPR, utilize o endpoint abaixo: http://ip_do_servidor_lpr:5000/api/v0/reboot_wpslpr Verificando vagas do modo Segmentation 11. Para obter a lista das vagas monitoradas pelas c\u00e2meras do tipo \" segmentation \": http://ip_do_servidor_lpr:5000/general/spaces O sistema retornar\u00e1 algo como: { \"id\": 1, \"name\": WPS_LPR Vaga 1\", \"sectorId\": 1, \"sectorName\": WPS, \"levelId\": 1, \"levelName\": G1, \"parkingId\": 1, \"parkingName\": WPS G1, \"tariffZone\": 1, \"disabled\": False, \"handicap\": False, \"xCoord\": 0, \"yCoord\": 0 } 12. Para obter uma atualiza\u00e7\u00e3o das vagas monitoradas pelas c\u00e2meras do tipo \" segmentation \": http://ip_do_servidor_lpr:5000/parkingSpaces/status/x Onde \" x \" \u00e9 o tempo em segundos considerados para a consulta Obtendo a placa com o modo Rekognition 13. Para submeter uma imagem \u00fanica para reconhecer a placa, utilize o m\u00e9todo \" rekognition \" http://ip_do_servidor_lpr:5000/api/v0/rekognition A imagem pode estar nas extens\u00f5es, bmp , jpg ou png , tamb\u00e9m \u00e9 aceito em base64 . Para enviar, utilize o m\u00e9todo POST, no corpo da mensagem coloque image na key , e a imagem que quer submeter em value . O retorno da solicita\u00e7\u00e3o ser\u00e1 o seguinte: { \"timestamp\": \"2024-11-07 14:47:28.931\", \"object_type\": \"CAR\", \"coor_object\": { \"xmin\": 183, \"xmax\": 857, \"ymin\": 171, \"ymax\": 558 }, \"plate_number\": \"SDH1I20\", \"confidence\": 1.0, \"car_model\": \"RAM - rampage\" }","title":"Execu\u00e7\u00e3o"},{"location":"execucao.html#execucao","text":"Siga essas etapas para executar o sistema de reconhecimento de placas de ve\u00edculos WPS_LPR:","title":"Execu\u00e7\u00e3o"},{"location":"execucao.html#configuracao-das-cameras","text":"1. Configure a conex\u00e3o da(s) c\u00e2mera(s) no arquivo: /var/lib/ParkingPlus/WpsLpr/config/config.json 1.1 Aqui est\u00e1 um exemplo de como o arquivo config.json deve ser configurado para o funcionamento do sistema WPS_LPR , podem ser adicionadas v\u00e1rias c\u00e2meras para o processamento dentro do limite de processamento da m\u00e1quina. [ { \"camera_id\": \"1\", \"camera_type\": \"lpr\", \"camera_brand\": \"intelbras\", \"wps_topic\": \"WPS_LPR\", \"camera_ip\": \"192.168.1.108\", \"user\": \"wps\", \"password\": \"wpsbrasil2021\", \"channel_dvr\": \"1\", \"frame_ocr_rate\": 10, \"roi_size_x\": 1280, \"roi_size_y\": 720, \"roi_x\": 0, \"roi_y\": 0, \"limiar\": 20, \"plate_size_min\": 0, \"plate_size_max\": 0, \"image_size\": 0, \"ocr_mode\": 0, \"ocr_time\": 1, \"sector_id\": 1, \"parking_name\": \"\", \"protocol\": \"udp\", \"power_led\": 40, \"publish_interval\": 1000, \"parking_spaces_quantity\": 1, \"park_ids\": [] } ] Remova quaisquer coment\u00e1rios caso use esse exemplo. camera_id \u00e9 um n\u00famero sequencial que identifica a c\u00e2mera no arquivo e seus demais atributos; camera_ip \u00e9 o ip da c\u00e2mera que ser\u00e1 conectada; wps_topic t\u00f3pico do MQTT que as mensagens ser\u00e3o publicadas; user usu\u00e1rio da c\u00e2mera; password senha da c\u00e2mera; channel_dvr canal para conex\u00e3o com a c\u00e2mera, geralmente \u00e9 \"1\", quando for utilizar conex\u00e3o via DVR ou NVR verificar o n\u00famero do canal para se conectar; camera_brand \u00e9 a marca da c\u00e2mera, os modelos homologados s\u00e3o: \"intelbras\" ; \"hikvision\" ; \"positivo\" ; \"pumatronix\" . frame_ocr_rate \u00e9 a taxa de fps que ser\u00e1 passada para a c\u00e2mera, o WPS_LPR por default faz o OCR em uma imagem por segundo de cada c\u00e2mera, por\u00e9m ele n\u00e3o est\u00e1 mais vinculado a essa chave. PS : Para c\u00e2meras Hikvision e Intelbr\u00e1s mais atuais, utilize 25 ou 30; roi_size \u00e9 o tamanho da imagem que ser\u00e1 passada para o WPS_LPR fazer o OCR na imagem, o padr\u00e3o \u00e9 1280 para a largura e 720 para a altura; roi s\u00e3o os pontos iniciais para desenho de um ret\u00e2ngulo na imagem, para limitar a \u00e1rea de atua\u00e7\u00e3o do OCR na imagem. Um objetivo por exemplo \u00e9 que n\u00e3o seja feito OCR em pistas vizinhas; ocr_mode \u00e9 o tipo poss\u00edvel de OCR nos tipos de ve\u00edculos, que s\u00e3o: \"0\" somente carro; \"1\" somente moto; \"2\" carro e moto. camera_type \u00e9 o tipo de utiliza\u00e7\u00e3o que a c\u00e2mera ter\u00e1 no sistema WPS_LPR, que poder\u00e1 ser: \"lpr\" : Para reconhecimento das placas de ve\u00edculos; \"context\" : Para capturar fotos de c\u00e2meras de contexto, c\u00e2meras que ser\u00e3o posicionadas com o intuito de registrar diversas faces dos ve\u00edculos e do usu\u00e1rio do estacionamento; \"segmentation\" : Para utiliza\u00e7\u00e3o de reconhecimento de placas em vagas espec\u00edficas do estacionamento, bem como identificar se a vaga est\u00e1 livre ou ocupada. Cada c\u00e2mera poder\u00e1 monitorar de 1 a 4 vagas. limiar \u00e9 a quantidade de movimento para ativar o LPR, ou seja submeter o frame \u00e0 biblioteca de reconhecimento, caso a quantidade de movimento seja menor que o limiar, o frame ser\u00e1 descartado, at\u00e9 que a quantidade seja alcan\u00e7ada. Caso a quantidade seja superior ao limiar, e nos frames seguintes seja menor, o sistema verificar\u00e1 no \u00faltimo frame submetido, se houve placa detectada, caso sim, ele envia mais um frame, at\u00e9 que nenhuma placa seja detectada e n\u00e3o haja quantidade de movimento superior ao limiar. image_size \u00e9 o tamanho das imagens que ser\u00e3o enviadas na mensagem, os valores s\u00e3o: \"0\" 1280 x 720; \"1\" 800 x 450; \"2\" 640 x 360; \"9\" Sem imagem. plate_size_min \u00e9 o tamanho m\u00ednimo da placa para ser submetido ao OCR (0 \u00e9 desligado). plate_size_max \u00e9 o tamanho m\u00e1ximo da placa para ser submetido ao OCR (0 \u00e9 desligado). Esse valor deve ser obrigatoriamente maior que o \"plate_size_min\". ocr_time \u00e9 a quantidade de imagens por segundo que ser\u00e3o submetidas ao OCR no modo \" lpr \", este valor varia de 1 a 4 imagens por segundo, o padr\u00e3o \u00e9 1 por segundo, s\u00f3 aumente esse n\u00famero caso tenha reserva de recursos de processamento no Servidor de LPR. J\u00e1 no modo \" Segmentation \" \u00e9 o tempo em que uma imagem ser\u00e1 submetida ao OCR, esse tempo \u00e9 entre 10 e 40 segundos, o padr\u00e3o \u00e9 15 segundos. sector_id \u00e9 o ID do setor onde a c\u00e2mera \" segmentation \" est\u00e1 instalada, isso reflete na tarifa\u00e7\u00e3o do setor. parking_name \u00e9 o nome do setor, \u00e9 opcional. protocol \u00e9 o tipo de protocolo que ser\u00e1 usado para fazer o streaming das c\u00e2meras, o padr\u00e3o \u00e9 UDP, s\u00f3 use o protocolo TCP para fazer debug no sistema. power_led \u00e9 a pot\u00eancia do LED para c\u00e2meras Pumatronix, que contam com a luz branca, o padr\u00e3o \u00e9 40, \u00e9 importante verificar o funcionamento para evitar que a imagem da placa \"estoure\". publish_interval \u00e9 o tempo que a \"melhor\" placa ser\u00e1 publicada no MQTT, como agora a quantidade de OCR por segundo pode ser alterada, \u00e9 importante n\u00e3o \"inundar\" o terminal com v\u00e1rias publica\u00e7\u00f5es de placas, sendo assim, mesmo que a quantidade de OCR seja 4, ele ir\u00e1 publicar apenas 1 por segundo caso o tempo aqui seja 1000, e tamb\u00e9m com o intuito de melhorar a performance dos terminais com Mini PCs defasados, pode-se aumentar esse tempo, sem correr o risco de perder imagens para OCR como no m\u00e9todo antigo, antes era poss\u00edvel fazer 1 OCR a cada 2 segundos, agora \u00e9 poss\u00edvel fazer 2 OCRs em 2 segundos, e enviar apenas 1 placa a cada 2 segundos. Por padr\u00e3o o tempo \u00e9 1000, e ele varia entre 800 e 2000. parking_spaces_quantity \u00e9 a quantidade de vagas que ser\u00e3o monitoradas no m\u00e9todo \" segmentation \", entre 1 e 4 vagas. park_ids s\u00e3o os ids das vagas que ser\u00e3o monitoradas no m\u00e9todo \" segmentation \", entre 1 e 4 vagas. 1.2 Para adicionar outras c\u00e2meras basta seguir o layout, e repetir os par\u00e2metros com seus devidos valores. 1.3 Caso seja uma migra\u00e7\u00e3o e exista um arquivo supervisord.conf com as configura\u00e7\u00f5es das c\u00e2meras, pode-se utilizar um conversor de supervisor para json, execute os passos abaixo para us\u00e1-lo. gdown 1UVEM4WeaugcTujOQ7G2MPVBP3RPlPsp_ chmod +x converter_sup_to_docker ./converter_sup_to_docker Isso ir\u00e1 gerar um config.json na pasta /instalacoes, que poder\u00e1 ser copiado para o docker fazer a leitura das c\u00e2meras.","title":"Configura\u00e7\u00e3o das c\u00e2meras"},{"location":"execucao.html#funcionamento-do-sistema-wps_lpr","text":"2. O sistema assim que o container for iniciado j\u00e1 estar\u00e1 funcionando com as c\u00e2meras cadastradas no arquivo /var/lib/ParkingPlus/WpsLpr/config/config.json , qualquer altera\u00e7\u00e3o no arquivo o sistema processar\u00e1 as altera\u00e7\u00f5es, e far\u00e1 a devida a\u00e7\u00e3o, que poder\u00e1 ser adicionar uma nova c\u00e2mera, remover uma c\u00e2mera, alterar algum par\u00e2metro de alguma c\u00e2mera:","title":"Funcionamento do sistema WPS_LPR"},{"location":"execucao.html#consultando-logs-do-sistema","text":"3. As informa\u00e7\u00f5es do sistema WPS_LPR, poder\u00e3o ser consultadas pelo log journal , pelo comando: journalctl CONTAINER_TAG=ParkingPlus:WPS_LPR Oportunamente pode se passar o par\u00e2metro -f, para visualizar o log em tempo real. journalctl -f CONTAINER_TAG=ParkingPlus:WPS_LPR --output cat .code-block { font-size: 0.7em; /* Ajusta o tamanho da fonte */ white-space: pre-wrap; /* Permite quebras de linha no conte\u00fado pre */ } Exemplo de C\u00f3digo 3.1 A sa\u00edda do comando ser\u00e1 conforme abaixo: Clique para expandir 2000-01-01 00:00:54.033 | INFO: ENT_PRINC_3_FRONTAL | [SNAPSHOT] | Placa detectada: PRZ4B93 | Tipo de Ve\u00edculo: CAR | Marca/Modelo do Ve\u00edculo: VOLKSWAGEN - POLO 2000-01-01 00:00:54.525 | INFO: ENT_PRINC_2_FRONTAL | [SNAPSHOT] | Placa detectada: JIR0H44 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:01.109 | INFO: ENT_PRINC_1_FRONTAL | [SNAPSHOT] | Placa detectada: JJV7842 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:04.525 | INFO: ENT_PRINC_1_TRASEIRA | [SNAPSHOT] | Placa detectada: JJV7842 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:05.330 | INFO: ENT_PRINC_1_FRONTAL | [SNAPSHOT] | Placa detectada: JJV7842 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:08.327 | INFO: ENT_SUL_1_FRONTAL | [SNAPSHOT] | Placa detectada: PRO6225 | Tipo de Ve\u00edculo: CAR | Marca/Modelo do Ve\u00edculo: TOYOTA - YARIS 2000-01-01 00:01:11.355 | INFO: ENT_SUL_1_TRASEIRA | [SNAPSHOT] | Placa detectada: PRO6225 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:12.203 | INFO: ENT_SUL_1_FRONTAL | [SNAPSHOT] | Placa detectada: PRO6225 | Tipo de Ve\u00edculo: CAR | Marca/Modelo do Ve\u00edculo: TOYOTA - YARIS 2000-01-01 00:01:20.439 | INFO: ENT_TOK_STOK_2_FRONTAL | [SNAPSHOT] | Placa detectada: SDK5G47 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:33.051 | INFO: ENT_SUL_2_FRONTAL | [SNAPSHOT] | Placa detectada: SSG1C35 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:36.270 | INFO: ENT_SUL_2_TRASEIRA | [SNAPSHOT] | Placa detectada: SSG1C35 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:37.016 | INFO: ENT_SUL_2_FRONTAL | [SNAPSHOT] | Placa detectada: SSG1C35 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:38.034 | INFO: SAI_2_SUL_FRENTE | [SNAPSHOT] | Placa detectada: SYV8D43 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:41.138 | INFO: SAI_2_SUL_TRASEIRA | [SNAPSHOT] | Placa detectada: SYV8D43 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:41.974 | INFO: SAI_2_SUL_FRENTE | [SNAPSHOT] | Placa detectada: SYV8D43 | Tipo de Ve\u00edculo: CAR | Marca/Modelo do Ve\u00edculo: FIAT - ARGO 2000-01-01 00:01:42.363 | INFO: ENT_TOK_STOK_1_FRONTAL | [SNAPSHOT] | Placa detectada: SCQ1H08 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:46.859 | INFO: ENT_TOK_STOK_1_FRONTAL | [SNAPSHOT] | Placa detectada: SCQ1H08 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:47.560 | INFO: SAI_SUL_3_TRASEIRA | [SNAPSHOT] | Placa detectada: PQH2967 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:49.070 | INFO: SAI_SUL_3_FRONTAL | [SNAPSHOT] | Placa detectada: PQH2967 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:57.925 | INFO: ENT_PRINC_2_FRONTAL | [SNAPSHOT] | Placa detectada: NDO7C97 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:58.670 | INFO: ENT_3_NORTE_FRENTE | [SNAPSHOT] | Placa detectada: QUH3A03 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:01:59.684 | INFO: ENT_PRINC_2_TRASEIRA | [SNAPSHOT] | Placa detectada: NDO7C97 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:02:01.278 | INFO: ENT_3_NORTE_TRASEIRA | [SNAPSHOT] | Placa detectada: QUH3A03 | Tipo de Ve\u00edculo: CAR 2000-01-01 00:03:28.210 | INFO: ENT_MOTO_1 | Frame n\u00famero: 705 | Placa: SCN3A36 | Confianca: 1.0 2000-01-01 00:03:29.215 | INFO: ENT_MOTO_1 | Frame n\u00famero: 706 | Placa: SCN3A36 | Confianca: 1.0 2000-01-01 00:03:30.218 | INFO: ENT_MOTO_1 | Frame n\u00famero: 707 | Placa: SCN3A36 | Confianca: 1.0 2000-01-01 00:03:31.224 | INFO: ENT_MOTO_1 | Frame n\u00famero: 708 | Placa: SCN3A36 | Confianca: 1.0","title":"Consultando Logs do Sistema"},{"location":"execucao.html#alterando-nivel-de-log","text":"4. Para alterar o n\u00edvel de log, altere o arquivo: /var/lib/ParkingPlus/WpsLpr/config/settings.xml Caso o arquivo n\u00e3o exista, utilize o sample na pasta para cri\u00e1-lo, e altere o n\u00edvel caso seja necess\u00e1rio. O log vem configurado com n\u00edvel INFO , que exibe as informa\u00e7\u00f5es conforme acima, caso queira depurar alguma informa\u00e7\u00e3o, como o tempo gasto em cada etapa, altere para DEBUG ou TRACE , e ap\u00f3s as analises realizadas, retorne para INFO . <settings> <log_level>INFO</log_level> </settings> 4.1 A partir da vers\u00e3o 2.6.0 a mudan\u00e7a no n\u00edvel do LOG ser\u00e1 din\u00e2mica, ou seja ao alterar no arquivo o LOG j\u00e1 passar\u00e1 a exibir o LOG nesse n\u00edvel sem a necessidade de reiniciar a aplica\u00e7\u00e3o.","title":"Alterando n\u00edvel de log"},{"location":"execucao.html#verificando-cameras-online-no-sistema","text":"5. Para verificar quantas e quais c\u00e2meras s\u00e3o, \u00e9 necess\u00e1rio fazer uma requisi\u00e7\u00e3o GET HTTP, no seguinte endpoint: http://ip_do_servidor_lpr:5000/api/v0/running_cameras 5.1 O retorno da requisi\u00e7\u00e3o ser\u00e1 algo do tipo: Clique para expandir { \"Cameras online\": { \"LPR\": [ \"ENT_MOTO_2 - 192.168.8.127 (Online)\", \"SAI_MOTO_1 - 192.168.8.143 (Online)\", \"SAI_MOTO_2 - 192.168.8.144 (Online)\", \"ENT_MOTO_1 - 192.168.8.126 (Online)\" ], \"WPS 360\": [ \"ENT_PRINC_2_TRASEIRA - 192.168.20.199 (Online)\", \"ENT_PRINC_3_TRASEIRA - 192.168.20.190 (Online)\", ... \"SAI_SUL_3_FRONTAL - 192.168.20.196 (Online)\", \"SAI_PRINC_3_FRONTAL - 192.168.20.219 (Online)\" ] }, \"Total de cameras online\": 54, \"Cameras offline\": { \"WPS 360\": [ \"SAI_LOJISTA_FRONTAL - 192.168.20.38 (Offline)\", \"ENT_LOJISTA_TRASEIRA - 192.168.20.112 (Offline)\" ] }, \"Total de cameras offline\": 2 }","title":"Verificando c\u00e2meras online no sistema"},{"location":"execucao.html#solicitando-um-snapshot-de-uma-camera","text":"6. Para solicitar um snapshot, \u00e9 necess\u00e1rio fazer uma requisi\u00e7\u00e3o GET HTTP, no seguinte endpoint: http://ip_do_servidor_lpr:5000/api/v0/snapshot 6.1 \u00c9 necess\u00e1rio passar tamb\u00e9m o argumento wps_topic , exemplo: http://127.0.0.1:5000/api/v0/snapshot?wps_topic=TESTE O sistema retornar\u00e1 imediatamente a \u00faltima imagem salva em buffer referente ao wps_topic fornecido. Segue um exemplo de resposta da solicita\u00e7\u00e3o enviada: { \"timestamp\": timestamp, \"object_type\": object_type, \"imagem\": { \"data\": snapshot_lpr, \"type\": \"image/jpg\", } } As imagens est\u00e3o codificadas em base64, com resolu\u00e7\u00e3o 1280x720 e formato JPG.","title":"Solicitando um snapshot de uma c\u00e2mera"},{"location":"execucao.html#verificando-quantidade-de-threads","text":"7. Para verificar quantas threads do sistema WPS_LPR est\u00e3o ativas, basta fazer uma requisi\u00e7\u00e3o GET HTTP no endpoint abaixo: http://ip_do_servidor_lpr:5000/api/v0/threads O retorno ser\u00e1 a quantidade de threads em execu\u00e7\u00e3o, usado para DEBUG. 7.1 Para verificar o nome das threads em execu\u00e7\u00e3o no sistema WPS_LPR, fa\u00e7a uma requisi\u00e7\u00e3o GET HTTP no endpoint: http://ip_do_servidor_lpr:5000/api/v0/threads_details O retorno ser\u00e1 o detalhamento das threads, para ajudar no processo de DEBUG. Clique para expandir { \"thread_details\": [ { \"name\": \"MainThread\", \"id\": 139885484580992 }, { \"name\": \"MonitorLogLevel\", \"id\": 139885465700032 }, { \"name\": \"pymongo_server_monitor_thread\", \"id\": 139883041511104 }, { \"name\": \"pymongo_kill_cursors_thread\", \"id\": 139883145090752 }, { \"name\": \"pymongo_server_rtt_thread\", \"id\": 139882454316736 }, { \"name\": \"Inotify (InotifyBuffer)\", \"id\": 139884727596736 }, { \"name\": \"Inotify (InotifyEmitter)\", \"id\": 139884735989440 }, { \"name\": \"Inotify (InotifyObserver)\", \"id\": 139884878599872 }, { \"name\": \"JSON monitoring\", \"id\": 139884886992576 }, { \"name\": \"Webserver WPS_LPR\", \"id\": 139885328078528 }, { \"name\": \"Schedule\", \"id\": 139885319685824 }, { \"name\": \"ThreadPoolExecutor-3_0\", \"id\": 139885172213440 }, { \"name\": \"ThreadPoolExecutor-3_1\", \"id\": 139884895385280 }, { \"name\": \"ThreadPoolExecutor-3_2\", \"id\": 139883058296512 }, { \"name\": \"ThreadPoolExecutor-3_3\", \"id\": 139883049903808 }, { \"name\": \"MQTT: SAI_MOTO_1\", \"id\": 139875802146496 }, { \"name\": \"MQTT: ENT_MOTO_1\", \"id\": 139880675927744 }, { \"name\": \"MQTT: ENT_MOTO_2\", \"id\": 139878863976128 }, { \"name\": \"Thread-826\", \"id\": 139878880761536 } ], \"thread_types\": { \"MainThread\": 1, \"Daemon Threads\": 8, \"ThreadPoolExecutor\": 4, \"Inotify\": 3, \"Others\": 3 }, \"total_active_threads\": 19 }","title":"Verificando quantidade de Threads"},{"location":"execucao.html#exibindo-a-versao-do-wps_lpr","text":"8. Para verificar a vers\u00e3o do sistema, fa\u00e7a uma requisi\u00e7\u00e3o GET HTTP no endpoint abaixo: http://ip_do_servidor_lpr:5000/api/v0/version { \"version\": \"2.9.0\" }","title":"Exibindo a vers\u00e3o do WPS_LPR"},{"location":"execucao.html#verificando-as-conexoes-no-wps_lpr","text":"9. Para verificar todas as conex\u00f5es configuradas no sistema WPS_LPR, fa\u00e7a uma requisi\u00e7\u00e3o GET HTTP no endpoint: http://ip_do_servidor_lpr:5000/api/v0/connections O retorno ser\u00e1 a listagem das conex\u00f5es configuradas no sistema. Clique para expandir { \"lpr\": [ { \"camera_id\": \"1\", \"wps_topic\": \"ENT_MOTO_1\", \"camera_ip\": \"192.168.8.126\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Moto\", \"publish_interval\": \"1000 ms\" }, { \"camera_id\": \"2\", \"wps_topic\": \"ENT_MOTO_2\", \"camera_ip\": \"192.168.8.127\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Moto\", \"publish_interval\": \"1000 ms\" }, { \"camera_id\": \"3\", \"wps_topic\": \"SAI_MOTO_1\", \"camera_ip\": \"192.168.8.143\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Moto\", \"publish_interval\": \"1000 ms\" }, { \"camera_id\": \"4\", \"wps_topic\": \"SAI_MOTO_2\", \"camera_ip\": \"192.168.8.144\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Moto\", \"publish_interval\": \"1000 ms\" } ], \"context\": [ { \"camera_id\": \"5\", \"wps_topic\": \"ENT_PRINC_1_FRONTAL\", \"camera_ip\": \"192.168.20.193\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Carro\", \"publish_interval\": \"1000 ms\" }, ... { \"camera_id\": \"55\", \"wps_topic\": \"SAI_2_SUL_FRENTE\", \"camera_ip\": \"192.168.20.225\", \"ocr_time\": \"0/seg\", \"ocr_mode\": \"Carro\", \"publish_interval\": \"0 ms\" }, { \"camera_id\": \"56\", \"wps_topic\": \"SAI_2_SUL_TRASEIRA\", \"camera_ip\": \"192.168.20.195\", \"ocr_time\": \"1/seg\", \"ocr_mode\": \"Carro e Moto\", \"publish_interval\": \"1000 ms\" } ] }","title":"Verificando as conex\u00f5es no WPS_LPR"},{"location":"execucao.html#reiniciando-a-aplicacao","text":"10. Para reiniciar o sistema WPS_LPR, utilize o endpoint abaixo: http://ip_do_servidor_lpr:5000/api/v0/reboot_wpslpr","title":"Reiniciando a aplica\u00e7\u00e3o"},{"location":"execucao.html#verificando-vagas-do-modo-segmentation","text":"11. Para obter a lista das vagas monitoradas pelas c\u00e2meras do tipo \" segmentation \": http://ip_do_servidor_lpr:5000/general/spaces O sistema retornar\u00e1 algo como: { \"id\": 1, \"name\": WPS_LPR Vaga 1\", \"sectorId\": 1, \"sectorName\": WPS, \"levelId\": 1, \"levelName\": G1, \"parkingId\": 1, \"parkingName\": WPS G1, \"tariffZone\": 1, \"disabled\": False, \"handicap\": False, \"xCoord\": 0, \"yCoord\": 0 } 12. Para obter uma atualiza\u00e7\u00e3o das vagas monitoradas pelas c\u00e2meras do tipo \" segmentation \": http://ip_do_servidor_lpr:5000/parkingSpaces/status/x Onde \" x \" \u00e9 o tempo em segundos considerados para a consulta","title":"Verificando vagas do modo Segmentation"},{"location":"execucao.html#obtendo-a-placa-com-o-modo-rekognition","text":"13. Para submeter uma imagem \u00fanica para reconhecer a placa, utilize o m\u00e9todo \" rekognition \" http://ip_do_servidor_lpr:5000/api/v0/rekognition A imagem pode estar nas extens\u00f5es, bmp , jpg ou png , tamb\u00e9m \u00e9 aceito em base64 . Para enviar, utilize o m\u00e9todo POST, no corpo da mensagem coloque image na key , e a imagem que quer submeter em value . O retorno da solicita\u00e7\u00e3o ser\u00e1 o seguinte: { \"timestamp\": \"2024-11-07 14:47:28.931\", \"object_type\": \"CAR\", \"coor_object\": { \"xmin\": 183, \"xmax\": 857, \"ymin\": 171, \"ymax\": 558 }, \"plate_number\": \"SDH1I20\", \"confidence\": 1.0, \"car_model\": \"RAM - rampage\" }","title":"Obtendo a placa com o modo Rekognition"},{"location":"instalacao.html","text":"Configura\u00e7\u00e3o ParkingPlus-WPS_LPR Pr\u00e9-Requisitos Sistema operacional instalado e configurado. Docker do MQTT importado e em execu\u00e7\u00e3o. Instala\u00e7\u00e3o Nesta etapa considera que todas as demais depend\u00eancias do Sistema Operacional escolhido j\u00e1 foram devidamente instaladas, para consultar quais s\u00e3o elas e o procedimento de instala\u00e7\u00e3o v\u00e1 at\u00e9 a se\u00e7\u00e3o Configura\u00e7\u00e3o Sistema Operacional . Siga estas etapas para configurar o ambiente de desenvolvimento e executar o container com o sistema WPS_LPR: Vers\u00e2o Atual: \"2.9.2\" Baixe a imagem ParkingPlus:WPS_LPR mais recente dispon\u00edvel no resposit\u00f3rio. Arquivos: - ParkingPlus-WPSLPR-2.9.2_gpu.tgz - ParkingPlus-WPSLPR-2.9.2_cpu.tgz Gerar token para autentica\u00e7\u00e3o: OAuth Playground Escolher a API: Cloud Storage API v1 https://www.googleapis.com/auth/devstorage.read_only Clique em Authorize API . Escolha sua conta da wps-sa . Clique em Exchange authorization code for tokens . Copie o Access Token e substitua em access_token na chamada do curl abaixo. Ou crie um variavel de ambiente com o conte\u00fado, token. Par\u00e2metros para download da imagem BUCKET_NAME : lpr-wps-v1 OBJECT_NAME : nome do arquivo (ex.: ParkingPlus-WPSLPR-2.9.2_gpu.tgz ) SAVE_TO_LOCATION : local onde deseja salvar o arquivo curl -X GET \\ -H \"Authorization: Bearer <access_token>\" \\ -o \"<SAVE_TO_LOCATION>\" \\ \"https://storage.googleapis.com/storage/v1/b/<BUCKET_NAME>/o/<OBJECT_NAME>?alt=media\" :root { --primary-color: #ff5722; } [data-md-color-scheme=\"default\"] { --tab-bg: #f9f9f9; --tab-hover: #eeeeee; --tab-active: var(--primary-color); --tab-content-bg: #fefefe; --tab-border: #ddd; --tab-text: #333; --tab-active-text: white; } [data-md-color-scheme=\"slate\"] { --tab-bg: #2e2e2e; --tab-hover: #3a3a3a; --tab-active: var(--primary-color); --tab-content-bg: #1f1f1f; --tab-border: #444; --tab-text: #eee; --tab-active-text: white; } .tab { overflow: hidden; # border-radius: 6px 6px 0 0; # background-color: var(--tab-bg); # border: 1px solid var(--tab-border); margin-bottom: 0; } .tab button { background-color: var(--tab-bg); border: none; outline: none; padding: 10px 24px; cursor: pointer; transition: 0.3s; font-size: 12px; color: var(--tab-text); border-radius: 6px 6px 6px 6px; } .tab button:hover { background-color: var(--tab-hover); } .tab button.active { background-color: var(--tab-active); color: var(--tab-active-text); } .tabcontent-platform, .tabcontent-system { display: none; padding: 2px; # border: 1px solid var(--tab-border); border-radius: 0 0 6px 6px; # background-color: var(--tab-content-bg); color: var(--tab-text); margin-bottom: 1rem; } .tabcontent-platform pre, .tabcontent-system pre { background-color: #272822; color: #f8f8f2; padding: 2px; border-radius: 6px; overflow-x: auto; } Exemplo de Uso GPU CPU curl -X GET \\ -H \"Authorization: Bearer $token\" \\ -o \"/instalacoes/ParkingPlus-WPSLPR-2.9.2_gpu.tgz\" \\ \"https://storage.googleapis.com/storage/v1/b/lpr-wps-v1/o/ParkingPlus-WPSLPR-2.9.2_gpu.tgz?alt=media\" curl -X GET \\ -H \"Authorization: Bearer $token\" \\ -o \"/instalacoes/ParkingPlus-WPSLPR-2.9.2_cpu.tgz\" \\ \"https://storage.googleapis.com/storage/v1/b/lpr-wps-v1/o/ParkingPlus-WPSLPR-2.9.2_cpu.tgz?alt=media\" Instala\u00e7\u00e3o de pacotes necess\u00e1rios e carregamento da imagem Ubuntu CentOS 7 Instale o python3.11 sudo apt install python3.11 Instale o pkplus-cli wget https://intranet.parkingplus.com.br/pub/Parking%20Plus/pkplus-cli/3.0.0/pkplus-cli_3.0.0-1_all.deb \\ --no-check-certificate --http-user='seu_usuario' --ask-password apt install ./pkplus-cli_3.0.0-1_all.deb mkdir -p /var/lib/pkplus-svc Carregue a imagem com o pkplus-cli pkplus-cli svc import-file /instalacoes/ParkingPlus:WPSLPR-2.9.2.tgz Ap\u00f3s a importa\u00e7\u00e3o inicie a imagem com o pkplus-cli pkplus-cli svc enable ParkingPlus:WPSLPR:2.9.2 Nas vers\u00f5es com GPU importe o tgz. \ud83d\udc4d P.S caso seja a vers\u00e3o CPU, o pkplus-cli \u00e9 capaz de rod\u00e1-la tamb\u00e9m GPU mkdir \"/instalacoes/ParkingPlus-WPSLPR-2.9.2\" mv /instalacoes/ParkingPlus-WPSLPR-2.9.2_gpu.tgz /instalacoes/ParkingPlus-WPSLPR-2.9.2 cd /instalacoes/ParkingPlus-WPSLPR-2.9.2 tar -xf ParkingPlus:WPSLPR-2.9.2_gpu.tgz docker load -i images.tar Inicie a imagem com o docker-compose docker compose up -d CPU wget https://intranet.parkingplus.com.br/pub/Parking%20Plus/pkplus-cli/3.0.0/pkplus-cli_3.0.0-1_all.deb \\ --no-check-certificate --http-user='seu_usuario' --ask-password apt install ./pkplus-cli_3.0.0-1_all.deb mkdir -p /var/lib/pkplus-svc pkplus-cli svc import-file /instalacoes/ParkingPlus:WPSLPR-2.9.2.tgz Ap\u00f3s a importa\u00e7\u00e3o inicie a imagem com pkplus-cli pkplus-cli svc enable ParkingPlus:WPSLPR:2.9.2 function openTabPlatform(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent-platform\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks-platform\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } function openTabSystem(evt, tabName) { var i, tabcontent, tablinks; tabcontent = document.getElementsByClassName(\"tabcontent-system\"); for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = \"none\"; } tablinks = document.getElementsByClassName(\"tablinks-system\"); for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(\" active\", \"\"); } document.getElementById(tabName).style.display = \"block\"; evt.currentTarget.className += \" active\"; } document.addEventListener(\"DOMContentLoaded\", function () { document.getElementById(\"defaultPlatform\").click(); document.getElementById(\"defaultSystem\").click(); }); \u26a0\ufe0f Aten\u00e7\u00e3o! Caso ap\u00f3s executar o container receba um erro de: unknown or invalid runtime name: nvidia , consulte a se\u00e7\u00e3o configura\u00e7\u00e3o do daemon do docker . Ao iniciar o container, o sistema j\u00e1 estar\u00e1 em funcionamento, lendo o arquivo config.json , para executar as c\u00e2meras cadastradas, para adicionar, alterar ou remover c\u00e2meras, siga para a pr\u00f3xima se\u00e7\u00e3o.","title":"Instala\u00e7\u00e3o"},{"location":"instalacao.html#configuracao-parkingplus-wps_lpr","text":"","title":"Configura\u00e7\u00e3o ParkingPlus-WPS_LPR"},{"location":"instalacao.html#pre-requisitos","text":"Sistema operacional instalado e configurado. Docker do MQTT importado e em execu\u00e7\u00e3o.","title":"Pr\u00e9-Requisitos"},{"location":"instalacao.html#instalacao","text":"Nesta etapa considera que todas as demais depend\u00eancias do Sistema Operacional escolhido j\u00e1 foram devidamente instaladas, para consultar quais s\u00e3o elas e o procedimento de instala\u00e7\u00e3o v\u00e1 at\u00e9 a se\u00e7\u00e3o Configura\u00e7\u00e3o Sistema Operacional . Siga estas etapas para configurar o ambiente de desenvolvimento e executar o container com o sistema WPS_LPR: Vers\u00e2o Atual: \"2.9.2\" Baixe a imagem ParkingPlus:WPS_LPR mais recente dispon\u00edvel no resposit\u00f3rio. Arquivos: - ParkingPlus-WPSLPR-2.9.2_gpu.tgz - ParkingPlus-WPSLPR-2.9.2_cpu.tgz","title":"Instala\u00e7\u00e3o"},{"location":"instalacao.html#gerar-token-para-autenticacao","text":"OAuth Playground","title":"Gerar token para autentica\u00e7\u00e3o:"},{"location":"instalacao.html#escolher-a-api","text":"Cloud Storage API v1 https://www.googleapis.com/auth/devstorage.read_only Clique em Authorize API . Escolha sua conta da wps-sa . Clique em Exchange authorization code for tokens . Copie o Access Token e substitua em access_token na chamada do curl abaixo. Ou crie um variavel de ambiente com o conte\u00fado, token.","title":"Escolher a API:"},{"location":"instalacao.html#parametros-para-download-da-imagem","text":"BUCKET_NAME : lpr-wps-v1 OBJECT_NAME : nome do arquivo (ex.: ParkingPlus-WPSLPR-2.9.2_gpu.tgz ) SAVE_TO_LOCATION : local onde deseja salvar o arquivo curl -X GET \\ -H \"Authorization: Bearer <access_token>\" \\ -o \"<SAVE_TO_LOCATION>\" \\ \"https://storage.googleapis.com/storage/v1/b/<BUCKET_NAME>/o/<OBJECT_NAME>?alt=media\" :root { --primary-color: #ff5722; } [data-md-color-scheme=\"default\"] { --tab-bg: #f9f9f9; --tab-hover: #eeeeee; --tab-active: var(--primary-color); --tab-content-bg: #fefefe; --tab-border: #ddd; --tab-text: #333; --tab-active-text: white; } [data-md-color-scheme=\"slate\"] { --tab-bg: #2e2e2e; --tab-hover: #3a3a3a; --tab-active: var(--primary-color); --tab-content-bg: #1f1f1f; --tab-border: #444; --tab-text: #eee; --tab-active-text: white; } .tab { overflow: hidden; # border-radius: 6px 6px 0 0; # background-color: var(--tab-bg); # border: 1px solid var(--tab-border); margin-bottom: 0; } .tab button { background-color: var(--tab-bg); border: none; outline: none; padding: 10px 24px; cursor: pointer; transition: 0.3s; font-size: 12px; color: var(--tab-text); border-radius: 6px 6px 6px 6px; } .tab button:hover { background-color: var(--tab-hover); } .tab button.active { background-color: var(--tab-active); color: var(--tab-active-text); } .tabcontent-platform, .tabcontent-system { display: none; padding: 2px; # border: 1px solid var(--tab-border); border-radius: 0 0 6px 6px; # background-color: var(--tab-content-bg); color: var(--tab-text); margin-bottom: 1rem; } .tabcontent-platform pre, .tabcontent-system pre { background-color: #272822; color: #f8f8f2; padding: 2px; border-radius: 6px; overflow-x: auto; }","title":"Par\u00e2metros para download da imagem"},{"location":"instalacao_mqtt.html","text":"Configura\u00e7\u00e3o ParkingPlus-MQTT Pr\u00e9-Requisitos Sistema operacional instalado e configurado. Instala\u00e7\u00e3o Nesta etapa considera que todas as demais depend\u00eancias do Sistema Operacional escolhido j\u00e1 foram devidamente instaladas, para consultar quais s\u00e3o elas e o procedimento de instala\u00e7\u00e3o v\u00e1 at\u00e9 a se\u00e7\u00e3o Configura\u00e7\u00e3o Sistema Operacional . Siga estas etapas para importar a imagem do ParkingPLUS-MQTT: Vers\u00e2o Atual: \"1.0.2\" \u26a0\ufe0f Aten\u00e7\u00e3o Essa imagem n\u00e3o \u00e9 retrocompat\u00edvel com outras vers\u00f5es, caso deseje voltar para uma vers\u00e3o anterior do ParkingPlus:WPS_LPR:2.7.0 , o ParkingPlus-MQTT precisa ser desabilitado. Baixe a imagem ParkingPlus:MQTT mais recente dispon\u00edvel no resposit\u00f3rio. Arquivos: - ParkingPlus-MQTT-1.0.2.tgz Gerar token para autentica\u00e7\u00e3o: OAuth Playground Escolher a API: Cloud Storage API v1 https://www.googleapis.com/auth/devstorage.read_only Clique em Authorize API . Escolha sua conta da wps-sa . Clique em Exchange authorization code for tokens . Copie o Access Token e substitua em access_token na chamada do curl abaixo. Ou crie um variavel de ambiente com o conte\u00fado, token. Par\u00e2metros para download da imagem BUCKET_NAME : lpr-wps-v1 OBJECT_NAME : nome do arquivo (ex.: ParkingPlus-MQTT-1.0.2.tgz ) SAVE_TO_LOCATION : local onde deseja salvar o arquivo curl -X GET \\ -H \"Authorization: Bearer <access_token>\" \\ -o \"<SAVE_TO_LOCATION>\" \\ \"https://storage.googleapis.com/storage/v1/b/<BUCKET_NAME>/o/<OBJECT_NAME>?alt=media\" Exemplo de Uso curl -X GET \\ -H \"Authorization: Bearer $token\" \\ -o \"/instalacoes/ParkingPlus-MQTT-1.0.2.tgz\" \\ \"https://storage.googleapis.com/storage/v1/b/lpr-wps-v1/o/ParkingPlus-MQTT-1.0.2.tgz?alt=media\" Instala\u00e7\u00e3o de pacotes necess\u00e1rios Instale o python3.11 (Ubuntu) Instala\u00e7\u00e3o Python 3.11 Instale o pkplus-cli (Ubuntu) Instala\u00e7\u00e3o pkplus-cli svc \u26a0\ufe0f Aten\u00e7\u00e3o! Execute o comando abaixo para criar a nova rede parkingplus_mqtt Pare os Containers do MQTT e WPS_LPR primeiro docker network rm parkingplus_mqtt docker network create --driver bridge --subnet=172.40.10.0/24 --gateway=172.40.10.1 parkingplus_mqtt Carregue a imagem com o pkplus-cli (dispon\u00edvel para Ubuntu e CentOS7) pkplus-cli svc import-file /instalacoes/ParkingPlus-MQTT-1.0.2.tgz Ap\u00f3s a importa\u00e7\u00e3o inicie a imagem do MQTT com pkplus-cli pkplus-cli svc enable ParkingPlus:MQTT:1.0.2 Caixa de Alerta .alert-box { border: 2px solid #ff4c4c; border-radius: 8px; background-color: #2d2f33; color: #ccc; padding: 16px; font-family: Arial, sans-serif; max-width: 800px; margin: 20px 0; } .alert-header { display: flex; align-items: center; background-color: #3b3b3b; padding: 8px 16px; border-radius: 6px 6px 0 0; font-weight: bold; color: #fff; } .alert-header .icon { color: #ff4c4c; font-size: 1.2em; margin-right: 8px; } .alert-content { padding-top: 12px; font-size: 0.95em; line-height: 1.5; } \u2757 CentOS7 O procedimento de instala\u00e7\u00e3o est\u00e1 descrito no manual pr\u00f3prio do sistema operacional , por\u00e9m, caso j\u00e1 esteja instalado, basta importar o arquivo. \u00c9 importante que essa imagem seja importada pelo pkplus-cli, pois ele gerencia as redes do Docker, sem a necessidade de fazer isso manualmente.","title":"Instala\u00e7\u00e3o MQTT"},{"location":"instalacao_mqtt.html#configuracao-parkingplus-mqtt","text":"","title":"Configura\u00e7\u00e3o ParkingPlus-MQTT"},{"location":"instalacao_mqtt.html#pre-requisitos","text":"Sistema operacional instalado e configurado.","title":"Pr\u00e9-Requisitos"},{"location":"instalacao_mqtt.html#instalacao","text":"Nesta etapa considera que todas as demais depend\u00eancias do Sistema Operacional escolhido j\u00e1 foram devidamente instaladas, para consultar quais s\u00e3o elas e o procedimento de instala\u00e7\u00e3o v\u00e1 at\u00e9 a se\u00e7\u00e3o Configura\u00e7\u00e3o Sistema Operacional . Siga estas etapas para importar a imagem do ParkingPLUS-MQTT: Vers\u00e2o Atual: \"1.0.2\"","title":"Instala\u00e7\u00e3o"},{"location":"instalacao_mqtt.html#atencao","text":"Essa imagem n\u00e3o \u00e9 retrocompat\u00edvel com outras vers\u00f5es, caso deseje voltar para uma vers\u00e3o anterior do ParkingPlus:WPS_LPR:2.7.0 , o ParkingPlus-MQTT precisa ser desabilitado. Baixe a imagem ParkingPlus:MQTT mais recente dispon\u00edvel no resposit\u00f3rio. Arquivos: - ParkingPlus-MQTT-1.0.2.tgz","title":"\u26a0\ufe0f Aten\u00e7\u00e3o"},{"location":"instalacao_mqtt.html#gerar-token-para-autenticacao","text":"OAuth Playground","title":"Gerar token para autentica\u00e7\u00e3o:"},{"location":"instalacao_mqtt.html#escolher-a-api","text":"Cloud Storage API v1 https://www.googleapis.com/auth/devstorage.read_only Clique em Authorize API . Escolha sua conta da wps-sa . Clique em Exchange authorization code for tokens . Copie o Access Token e substitua em access_token na chamada do curl abaixo. Ou crie um variavel de ambiente com o conte\u00fado, token.","title":"Escolher a API:"},{"location":"instalacao_mqtt.html#parametros-para-download-da-imagem","text":"BUCKET_NAME : lpr-wps-v1 OBJECT_NAME : nome do arquivo (ex.: ParkingPlus-MQTT-1.0.2.tgz ) SAVE_TO_LOCATION : local onde deseja salvar o arquivo curl -X GET \\ -H \"Authorization: Bearer <access_token>\" \\ -o \"<SAVE_TO_LOCATION>\" \\ \"https://storage.googleapis.com/storage/v1/b/<BUCKET_NAME>/o/<OBJECT_NAME>?alt=media\"","title":"Par\u00e2metros para download da imagem"},{"location":"instalacao_mqtt.html#exemplo-de-uso","text":"curl -X GET \\ -H \"Authorization: Bearer $token\" \\ -o \"/instalacoes/ParkingPlus-MQTT-1.0.2.tgz\" \\ \"https://storage.googleapis.com/storage/v1/b/lpr-wps-v1/o/ParkingPlus-MQTT-1.0.2.tgz?alt=media\"","title":"Exemplo de Uso"},{"location":"instalacao_mqtt.html#instalacao-de-pacotes-necessarios","text":"","title":"Instala\u00e7\u00e3o de pacotes necess\u00e1rios"},{"location":"instalacao_mqtt.html#instale-o-python311-ubuntu","text":"Instala\u00e7\u00e3o Python 3.11","title":"Instale o python3.11 (Ubuntu)"},{"location":"instalacao_mqtt.html#instale-o-pkplus-cli-ubuntu","text":"Instala\u00e7\u00e3o pkplus-cli svc","title":"Instale o pkplus-cli (Ubuntu)"},{"location":"instalacao_mqtt.html#atencao_1","text":"Execute o comando abaixo para criar a nova rede parkingplus_mqtt Pare os Containers do MQTT e WPS_LPR primeiro docker network rm parkingplus_mqtt docker network create --driver bridge --subnet=172.40.10.0/24 --gateway=172.40.10.1 parkingplus_mqtt","title":"\u26a0\ufe0f Aten\u00e7\u00e3o!"},{"location":"instalacao_mqtt.html#carregue-a-imagem-com-o-pkplus-cli-disponivel-para-ubuntu-e-centos7","text":"pkplus-cli svc import-file /instalacoes/ParkingPlus-MQTT-1.0.2.tgz","title":"Carregue a imagem com o pkplus-cli (dispon\u00edvel para Ubuntu e CentOS7)"},{"location":"instalacao_mqtt.html#apos-a-importacao-inicie-a-imagem-do-mqtt-com-pkplus-cli","text":"pkplus-cli svc enable ParkingPlus:MQTT:1.0.2 Caixa de Alerta .alert-box { border: 2px solid #ff4c4c; border-radius: 8px; background-color: #2d2f33; color: #ccc; padding: 16px; font-family: Arial, sans-serif; max-width: 800px; margin: 20px 0; } .alert-header { display: flex; align-items: center; background-color: #3b3b3b; padding: 8px 16px; border-radius: 6px 6px 0 0; font-weight: bold; color: #fff; } .alert-header .icon { color: #ff4c4c; font-size: 1.2em; margin-right: 8px; } .alert-content { padding-top: 12px; font-size: 0.95em; line-height: 1.5; } \u2757 CentOS7 O procedimento de instala\u00e7\u00e3o est\u00e1 descrito no manual pr\u00f3prio do sistema operacional , por\u00e9m, caso j\u00e1 esteja instalado, basta importar o arquivo. \u00c9 importante que essa imagem seja importada pelo pkplus-cli, pois ele gerencia as redes do Docker, sem a necessidade de fazer isso manualmente.","title":"Ap\u00f3s a importa\u00e7\u00e3o inicie a imagem do MQTT com pkplus-cli"},{"location":"rekognition.html","text":"Manual do m\u00e9todo rekognition para Detec\u00e7\u00e3o de Placa (LPR) e Identifica\u00e7\u00e3o de Ve\u00edculo Este manual descreve o processo de envio de imagens para o endpoint que processa uma imagem e retorna a placa do ve\u00edculo, o tipo de ve\u00edculo, e as coordenadas. O cliente pode enviar a imagem como um arquivo bin\u00e1rio ou codificado em base64, utilizando a chave image no corpo da requisi\u00e7\u00e3o. 1. Introdu\u00e7\u00e3o O endpoint processa uma imagem de um ve\u00edculo utilizando um modelo de Reconhecimento Autom\u00e1tico de Placas (LPR) para extrair a placa, identificar o tipo de ve\u00edculo e retornar as coordenadas do objeto detectado. 2. URL do Endpoint URL: http://ip_wpslpr:5000/api/v0/rekognition M\u00e9todo HTTP: POST 3. Requisitos Headers: Content-Type: multipart/form-data ou application/json 4. Par\u00e2metros da Requisi\u00e7\u00e3o Envio com Bin\u00e1rio (multipart/form-data) Ao utilizar o formato multipart/form-data , a imagem \u00e9 enviada diretamente no corpo da requisi\u00e7\u00e3o, com a chave image . POST /rekognition HTTP/1.1 Host: http://ip_wpslpr:5000/api/v0/rekognition` Content-Type: multipart/form-data { \"image\": <arquivo de imagem em formato bin\u00e1rio> } Envio com Base64 (application/json) Quando a imagem estiver codificada em base64, ela deve ser enviada no formato application/json , usando tamb\u00e9m a chave image . POST /rekognition HTTP/1.1 Host: http://ip_wpslpr:5000/api/v0/rekognition Content-Type: application/json { \"image\": \"<string base64 codificada>\" } 5. Exemplo de Requisi\u00e7\u00e3o Envio de Imagem em Bin\u00e1rio curl -X POST \"http://ip_wpslpr:5000/api/v0/rekognition\" \\ -H \"Content-Type: multipart/form-data\" \\ -F \"image=@carro.jpg\" Envio de Imagem em Base64 curl -X POST \"http://ip_wpslpr:5000/api/v0/rekognition\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD...\" }' 6. Estrutura da Resposta A resposta inclui o timestamp da requisi\u00e7\u00e3o, o tipo de objeto detectado (ex.: carro), as coordenadas do objeto, a placa reconhecida e o n\u00edvel de confian\u00e7a da predi\u00e7\u00e3o. Resposta de Sucesso { \"timestamp\": \"2024-11-07 14:47:28.931\", \"object_type\": \"CAR\", \"coor_object\": { \"xmin\": 183, \"xmax\": 857, \"ymin\": 171, \"ymax\": 558 }, \"plate_number\": \"SDH1I20\", \"confidence\": 1.0, \"car_model\": \"RAM - rampage\" } Respostas de Erro { \"status\": \"400\", \"mensagem\": \"Nenhuma imagem encontrada no formul\u00e1rio\" } { \"status\": \"400\", \"mensagem\": \"Nenhum arquivo selecionado\" } { \"status\": \"400\", \"mensagem\": \"N\u00e3o foi poss\u00edvel decodificar a imagem\" } { \"status\": \"400\", \"mensagem\": \"Nenhuma imagem em base64 encontrada no corpo da solicita\u00e7\u00e3o\" } { \"status\": \"415\", \"mensagem\": \"Tipo de conte\u00fado n\u00e3o suportado\" } 7. Tratamento de Erros 200 OK: Requisi\u00e7\u00e3o processada com sucesso. 400 Bad Request: Erro no formato ou no conte\u00fado da requisi\u00e7\u00e3o. 415 Unsuported Media Type: Erro no formato de M\u00eddia, ou n\u00e3o aceito. 500 Internal Server Error: Erro interno no servidor. 8. Fluxo de Execu\u00e7\u00e3o Cliente \u2192 Envia requisi\u00e7\u00e3o com imagem (Bin\u00e1rio ou Base64) usando a chave 'image' \u2193 Servidor \u2192 Valida o Formato e o Tamanho da Imagem \u2193 Servidor \u2192 Submete Imagem ao Modelo de LPR \u2193 Servidor \u2192 Extrai Placa, Tipo de Ve\u00edculo e Coordenadas \u2193 Servidor \u2192 Retorna Resultado (JSON) 9. Conclus\u00e3o Este manual oferece um guia pr\u00e1tico e claro para envio de imagens ao endpoint, visando obter a placa, tipo de ve\u00edculo e coordenadas. Ao seguir este formato, o cliente pode enviar imagens como bin\u00e1rio ou codificadas em base64, garantindo a flexibilidade de integra\u00e7\u00e3o com diferentes plataformas.","title":"Rekognition"},{"location":"rekognition.html#manual-do-metodo-rekognition-para-deteccao-de-placa-lpr-e-identificacao-de-veiculo","text":"Este manual descreve o processo de envio de imagens para o endpoint que processa uma imagem e retorna a placa do ve\u00edculo, o tipo de ve\u00edculo, e as coordenadas. O cliente pode enviar a imagem como um arquivo bin\u00e1rio ou codificado em base64, utilizando a chave image no corpo da requisi\u00e7\u00e3o.","title":"Manual do m\u00e9todo rekognition para Detec\u00e7\u00e3o de Placa (LPR) e Identifica\u00e7\u00e3o de Ve\u00edculo"},{"location":"rekognition.html#1-introducao","text":"O endpoint processa uma imagem de um ve\u00edculo utilizando um modelo de Reconhecimento Autom\u00e1tico de Placas (LPR) para extrair a placa, identificar o tipo de ve\u00edculo e retornar as coordenadas do objeto detectado.","title":"1. Introdu\u00e7\u00e3o"},{"location":"rekognition.html#2-url-do-endpoint","text":"URL: http://ip_wpslpr:5000/api/v0/rekognition M\u00e9todo HTTP: POST","title":"2. URL do Endpoint"},{"location":"rekognition.html#3-requisitos","text":"Headers: Content-Type: multipart/form-data ou application/json","title":"3. Requisitos"},{"location":"rekognition.html#4-parametros-da-requisicao","text":"","title":"4. Par\u00e2metros da Requisi\u00e7\u00e3o"},{"location":"rekognition.html#envio-com-binario-multipartform-data","text":"Ao utilizar o formato multipart/form-data , a imagem \u00e9 enviada diretamente no corpo da requisi\u00e7\u00e3o, com a chave image . POST /rekognition HTTP/1.1 Host: http://ip_wpslpr:5000/api/v0/rekognition` Content-Type: multipart/form-data { \"image\": <arquivo de imagem em formato bin\u00e1rio> }","title":"Envio com Bin\u00e1rio (multipart/form-data)"},{"location":"rekognition.html#envio-com-base64-applicationjson","text":"Quando a imagem estiver codificada em base64, ela deve ser enviada no formato application/json , usando tamb\u00e9m a chave image . POST /rekognition HTTP/1.1 Host: http://ip_wpslpr:5000/api/v0/rekognition Content-Type: application/json { \"image\": \"<string base64 codificada>\" }","title":"Envio com Base64 (application/json)"},{"location":"rekognition.html#5-exemplo-de-requisicao","text":"","title":"5. Exemplo de Requisi\u00e7\u00e3o"},{"location":"rekognition.html#envio-de-imagem-em-binario","text":"curl -X POST \"http://ip_wpslpr:5000/api/v0/rekognition\" \\ -H \"Content-Type: multipart/form-data\" \\ -F \"image=@carro.jpg\"","title":"Envio de Imagem em Bin\u00e1rio"},{"location":"rekognition.html#envio-de-imagem-em-base64","text":"curl -X POST \"http://ip_wpslpr:5000/api/v0/rekognition\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD...\" }'","title":"Envio de Imagem em Base64"},{"location":"rekognition.html#6-estrutura-da-resposta","text":"A resposta inclui o timestamp da requisi\u00e7\u00e3o, o tipo de objeto detectado (ex.: carro), as coordenadas do objeto, a placa reconhecida e o n\u00edvel de confian\u00e7a da predi\u00e7\u00e3o.","title":"6. Estrutura da Resposta"},{"location":"rekognition.html#resposta-de-sucesso","text":"{ \"timestamp\": \"2024-11-07 14:47:28.931\", \"object_type\": \"CAR\", \"coor_object\": { \"xmin\": 183, \"xmax\": 857, \"ymin\": 171, \"ymax\": 558 }, \"plate_number\": \"SDH1I20\", \"confidence\": 1.0, \"car_model\": \"RAM - rampage\" }","title":"Resposta de Sucesso"},{"location":"rekognition.html#respostas-de-erro","text":"{ \"status\": \"400\", \"mensagem\": \"Nenhuma imagem encontrada no formul\u00e1rio\" } { \"status\": \"400\", \"mensagem\": \"Nenhum arquivo selecionado\" } { \"status\": \"400\", \"mensagem\": \"N\u00e3o foi poss\u00edvel decodificar a imagem\" } { \"status\": \"400\", \"mensagem\": \"Nenhuma imagem em base64 encontrada no corpo da solicita\u00e7\u00e3o\" } { \"status\": \"415\", \"mensagem\": \"Tipo de conte\u00fado n\u00e3o suportado\" }","title":"Respostas de Erro"},{"location":"rekognition.html#7-tratamento-de-erros","text":"200 OK: Requisi\u00e7\u00e3o processada com sucesso. 400 Bad Request: Erro no formato ou no conte\u00fado da requisi\u00e7\u00e3o. 415 Unsuported Media Type: Erro no formato de M\u00eddia, ou n\u00e3o aceito. 500 Internal Server Error: Erro interno no servidor.","title":"7. Tratamento de Erros"},{"location":"rekognition.html#8-fluxo-de-execucao","text":"Cliente \u2192 Envia requisi\u00e7\u00e3o com imagem (Bin\u00e1rio ou Base64) usando a chave 'image' \u2193 Servidor \u2192 Valida o Formato e o Tamanho da Imagem \u2193 Servidor \u2192 Submete Imagem ao Modelo de LPR \u2193 Servidor \u2192 Extrai Placa, Tipo de Ve\u00edculo e Coordenadas \u2193 Servidor \u2192 Retorna Resultado (JSON)","title":"8. Fluxo de Execu\u00e7\u00e3o"},{"location":"rekognition.html#9-conclusao","text":"Este manual oferece um guia pr\u00e1tico e claro para envio de imagens ao endpoint, visando obter a placa, tipo de ve\u00edculo e coordenadas. Ao seguir este formato, o cliente pode enviar imagens como bin\u00e1rio ou codificadas em base64, garantindo a flexibilidade de integra\u00e7\u00e3o com diferentes plataformas.","title":"9. Conclus\u00e3o"},{"location":"releases.html","text":"Releases WPS_LPR 2.9.2 - 2025-05-16 Corre\u00e7\u00e3o do envio de tipo pessoa como moto. Agora pessoa \u00e9 enviado como pessoa e n\u00e3o moto como nas vers\u00f5es 2.9.0 e 2.9.1. 2.9.1 - 2025-05-12 Corre\u00e7\u00e3o do modelo de motos que n\u00e3o era importado, ao selecionar o modo LATAM. P.S: S\u00f3 funciona com placas de motos brasileiras. 2.9.0 Novo m\u00e9todo para detec\u00e7\u00e3o de placa e tipo de objeto; Adicionada verifica\u00e7\u00e3o de status da c\u00e2mera para tipos: segmenta\u00e7\u00e3o e contexto; Nomear threads para facilitar a depura\u00e7\u00e3o; Corre\u00e7\u00e3o de segmenta\u00e7\u00e3o, e implementa\u00e7\u00e3o de publica\u00e7\u00e3o de placas por vaga via MQTT; Modifica\u00e7\u00e3o na verifica\u00e7\u00e3o da exist\u00eancia de LEDs, que agora \u00e9 realizada por threads para agilizar o processamento; Adicionado suporte para c\u00e2meras do fabricante Axis; 2.7.3 Corre\u00e7\u00e3o do frame_ocr_rate recebido LPR Admin. 2.7.2 Corre\u00e7\u00e3o do parking_spaces_quantity quando valor setado for 0. 2.7.1 Corre\u00e7\u00e3o do Snapshot. 2.7.0 Separa\u00e7\u00e3o do MQTT do Docker da aplica\u00e7\u00e3o WPS_LPR; Corre\u00e7\u00e3o do problema de acesso a GPU pelo container ap\u00f3s daemon-reload executado no host; Adicionado os modelos de detec\u00e7\u00e3o de marca e modelo de ve\u00edculos para uso futuro; Corre\u00e7\u00e3o do acesso a GPU pelo container ap\u00f3s atualiza\u00e7\u00e3o do nvidia-container-toolkit; Corre\u00e7\u00e3o do Snapshot das vers\u00f5es 2.6.x que quebravam ap\u00f3s solicita\u00e7\u00e3o de Snaps; Envio pelo MQTT da placa reconhecida na solicita\u00e7\u00e3o do Snapshot, para LPR e WPS_360; Adi\u00e7\u00e3o de timestamp nos logs salvos em /var/log/wpslpr/. 2.6.6 Corre\u00e7\u00e3o do problema de acesso \u00e0 GPU pelo container, por conta da atualiza\u00e7\u00e3o do nvidia-container-toolkit. 2.6.5 Removido as c\u00e2meras Hikvision e Intelbras(modelos com API recentes) do envio de configura\u00e7\u00f5es via ONVIF, para ser enviado por API; Corrigido a obten\u00e7\u00e3o do modelo das c\u00e2meras Intelbras; Corre\u00e7\u00e3o da resolu\u00e7\u00e3o das c\u00e2meras, agora sempre usa a mais alta. Por\u00e9m no engine sempre ser\u00e1 1280x720, inclusive o ROI \u00e9 baseado nessa resolu\u00e7\u00e3o. 2.6.4 Tentativa de solucionar o problema de \"cannot convert float infinity to integer\". 2.6.3 Corre\u00e7\u00e3o do erro de publica\u00e7\u00e3o do MQTT, quando usu\u00e1rio insere valor inv\u00e1lido para o ocr_time. 2.6.1 Corre\u00e7\u00e3o do detector de movimentos; Troca do modelo de detec\u00e7\u00e3o de placas de motos; 2.6.0 Inclus\u00e3o de Novo Modelo de Detec\u00e7\u00e3o e OCR para placas de Motos; Inclus\u00e3o de suporte para c\u00e2meras Pumatronix; Novo m\u00e9todo de publica\u00e7\u00e3o das placas no MQTT, que agora ser\u00e1 por tempo definido; Novo m\u00e9todo de tempo de OCR, poder\u00e1 ser executado mais de um por segundo, e ser\u00e1 publicado apenas a melhor placa; Novo m\u00e9todo de ativa\u00e7\u00e3o do LED da c\u00e2mera Hikvision, agora ele fica ativo por um tempo maior, e tamb\u00e9m \u00e9 ativado no Snapshot; Alterado n\u00famero fixo de vagas que a c\u00e2mera no tipo Segmenta\u00e7\u00e3o poderia monitorar, eram 3, e agora pode ser entre 1 e 4 vagas; Separado em Threads, Execu\u00e7\u00e3o do OCR e Ativa\u00e7\u00e3o do LED, para evitar atrasos por demora na resposta da API, e na execu\u00e7\u00e3o do OCR; Nessa vers\u00e3o ao mudar o n\u00edvel de LOG, ele j\u00e1 passa a ser exibido imediatamente, sem a necessidade de reiniciar a aplica\u00e7\u00e3o. 2.5.1 Corre\u00e7\u00e3o do timeout de modelo da c\u00e2mera Intelbras; Corre\u00e7\u00e3o de aplica\u00e7\u00e3o de LED Hikvision, e controle da pot\u00eancia. 2.5.0 Implementado o reconhecimento de tipo de ve\u00edculo para Carros e Motos; Criado um endpoint para envio de imagens para o WPS_LPR reconhecer a placa do ve\u00edculo. /cgi-bin/rekognition.cgi 2.4.1 Corrigido o problema que a c\u00e2mera n\u00e3o iniciava, ap\u00f3s n\u00e3o receber a foto do snapshot de verifica\u00e7\u00e3o. Caso ela n\u00e3o receba, abrir\u00e1 o modo antigo, ou seja v\u00eddeo; Inclu\u00edda uma configura\u00e7\u00e3o de protocolo de comunica\u00e7\u00e3o para o RTSP, podendo ser UDP ou TCP. A configura\u00e7\u00e3o \u00e9 por c\u00e2mera, na chave \"protocol\", os valores esperados s\u00e3o \"udp\" ou \"tcp\". 2.4.0 Inclu\u00eddo um observador no arquivo de configura\u00e7\u00f5es, para caso haja mudan\u00e7a, ele atualizar as vari\u00e1veis que sofreram mudan\u00e7as sem que haja necessidade de reiniciar a aplica\u00e7\u00e3o; Alterado o protocolo de conex\u00e3o na c\u00e2mera, de TCP para UDP, para evitar atrasos no v\u00eddeo, quando a rede for ruim e houver retransmiss\u00e3o de pacotes; Removido o suporte da c\u00e2mera Pumatronix temporariamente. 2.3.1 Resolvido perda de conex\u00e3o ap\u00f3s reconex\u00e3o da c\u00e2mera; Removida a c\u00e2mera TP-LINK; Alterado delay snapshot de 0,5seg para 1,0seg, para garantir que o ve\u00edculo estar\u00e1 em um ponto melhor ao ser solicitado o snapshot; Alterada a confian\u00e7a m\u00ednima do primeiro caractere, para garantir que mesmo com um score menor, pode ser correto, sempre tenha placa dispon\u00edvel. 2.3.0 Controle de LED Hikvision; Frames por snapshot c\u00e2meras Hikvision e Intelbras. 2.2.0 WPS Segmentation Inclu\u00eddo. Criado a API de consulta das vagas, e as \u00faltimas altera\u00e7\u00f5es destas vagas. Corre\u00e7\u00e3o no snapshot da Intelbras, para incluir qual o canal ser\u00e1 feito.","title":"Releases"},{"location":"releases.html#releases-wps_lpr","text":"","title":"Releases WPS_LPR"},{"location":"releases.html#292-2025-05-16","text":"Corre\u00e7\u00e3o do envio de tipo pessoa como moto. Agora pessoa \u00e9 enviado como pessoa e n\u00e3o moto como nas vers\u00f5es 2.9.0 e 2.9.1.","title":"2.9.2 - 2025-05-16"},{"location":"releases.html#291-2025-05-12","text":"Corre\u00e7\u00e3o do modelo de motos que n\u00e3o era importado, ao selecionar o modo LATAM. P.S: S\u00f3 funciona com placas de motos brasileiras.","title":"2.9.1 - 2025-05-12"},{"location":"releases.html#290","text":"Novo m\u00e9todo para detec\u00e7\u00e3o de placa e tipo de objeto; Adicionada verifica\u00e7\u00e3o de status da c\u00e2mera para tipos: segmenta\u00e7\u00e3o e contexto; Nomear threads para facilitar a depura\u00e7\u00e3o; Corre\u00e7\u00e3o de segmenta\u00e7\u00e3o, e implementa\u00e7\u00e3o de publica\u00e7\u00e3o de placas por vaga via MQTT; Modifica\u00e7\u00e3o na verifica\u00e7\u00e3o da exist\u00eancia de LEDs, que agora \u00e9 realizada por threads para agilizar o processamento; Adicionado suporte para c\u00e2meras do fabricante Axis;","title":"2.9.0"},{"location":"releases.html#273","text":"Corre\u00e7\u00e3o do frame_ocr_rate recebido LPR Admin.","title":"2.7.3"},{"location":"releases.html#272","text":"Corre\u00e7\u00e3o do parking_spaces_quantity quando valor setado for 0.","title":"2.7.2"},{"location":"releases.html#271","text":"Corre\u00e7\u00e3o do Snapshot.","title":"2.7.1"},{"location":"releases.html#270","text":"Separa\u00e7\u00e3o do MQTT do Docker da aplica\u00e7\u00e3o WPS_LPR; Corre\u00e7\u00e3o do problema de acesso a GPU pelo container ap\u00f3s daemon-reload executado no host; Adicionado os modelos de detec\u00e7\u00e3o de marca e modelo de ve\u00edculos para uso futuro; Corre\u00e7\u00e3o do acesso a GPU pelo container ap\u00f3s atualiza\u00e7\u00e3o do nvidia-container-toolkit; Corre\u00e7\u00e3o do Snapshot das vers\u00f5es 2.6.x que quebravam ap\u00f3s solicita\u00e7\u00e3o de Snaps; Envio pelo MQTT da placa reconhecida na solicita\u00e7\u00e3o do Snapshot, para LPR e WPS_360; Adi\u00e7\u00e3o de timestamp nos logs salvos em /var/log/wpslpr/.","title":"2.7.0"},{"location":"releases.html#266","text":"Corre\u00e7\u00e3o do problema de acesso \u00e0 GPU pelo container, por conta da atualiza\u00e7\u00e3o do nvidia-container-toolkit.","title":"2.6.6"},{"location":"releases.html#265","text":"Removido as c\u00e2meras Hikvision e Intelbras(modelos com API recentes) do envio de configura\u00e7\u00f5es via ONVIF, para ser enviado por API; Corrigido a obten\u00e7\u00e3o do modelo das c\u00e2meras Intelbras; Corre\u00e7\u00e3o da resolu\u00e7\u00e3o das c\u00e2meras, agora sempre usa a mais alta. Por\u00e9m no engine sempre ser\u00e1 1280x720, inclusive o ROI \u00e9 baseado nessa resolu\u00e7\u00e3o.","title":"2.6.5"},{"location":"releases.html#264","text":"Tentativa de solucionar o problema de \"cannot convert float infinity to integer\".","title":"2.6.4"},{"location":"releases.html#263","text":"Corre\u00e7\u00e3o do erro de publica\u00e7\u00e3o do MQTT, quando usu\u00e1rio insere valor inv\u00e1lido para o ocr_time.","title":"2.6.3"},{"location":"releases.html#261","text":"Corre\u00e7\u00e3o do detector de movimentos; Troca do modelo de detec\u00e7\u00e3o de placas de motos;","title":"2.6.1"},{"location":"releases.html#260","text":"Inclus\u00e3o de Novo Modelo de Detec\u00e7\u00e3o e OCR para placas de Motos; Inclus\u00e3o de suporte para c\u00e2meras Pumatronix; Novo m\u00e9todo de publica\u00e7\u00e3o das placas no MQTT, que agora ser\u00e1 por tempo definido; Novo m\u00e9todo de tempo de OCR, poder\u00e1 ser executado mais de um por segundo, e ser\u00e1 publicado apenas a melhor placa; Novo m\u00e9todo de ativa\u00e7\u00e3o do LED da c\u00e2mera Hikvision, agora ele fica ativo por um tempo maior, e tamb\u00e9m \u00e9 ativado no Snapshot; Alterado n\u00famero fixo de vagas que a c\u00e2mera no tipo Segmenta\u00e7\u00e3o poderia monitorar, eram 3, e agora pode ser entre 1 e 4 vagas; Separado em Threads, Execu\u00e7\u00e3o do OCR e Ativa\u00e7\u00e3o do LED, para evitar atrasos por demora na resposta da API, e na execu\u00e7\u00e3o do OCR; Nessa vers\u00e3o ao mudar o n\u00edvel de LOG, ele j\u00e1 passa a ser exibido imediatamente, sem a necessidade de reiniciar a aplica\u00e7\u00e3o.","title":"2.6.0"},{"location":"releases.html#251","text":"Corre\u00e7\u00e3o do timeout de modelo da c\u00e2mera Intelbras; Corre\u00e7\u00e3o de aplica\u00e7\u00e3o de LED Hikvision, e controle da pot\u00eancia.","title":"2.5.1"},{"location":"releases.html#250","text":"Implementado o reconhecimento de tipo de ve\u00edculo para Carros e Motos; Criado um endpoint para envio de imagens para o WPS_LPR reconhecer a placa do ve\u00edculo. /cgi-bin/rekognition.cgi","title":"2.5.0"},{"location":"releases.html#241","text":"Corrigido o problema que a c\u00e2mera n\u00e3o iniciava, ap\u00f3s n\u00e3o receber a foto do snapshot de verifica\u00e7\u00e3o. Caso ela n\u00e3o receba, abrir\u00e1 o modo antigo, ou seja v\u00eddeo; Inclu\u00edda uma configura\u00e7\u00e3o de protocolo de comunica\u00e7\u00e3o para o RTSP, podendo ser UDP ou TCP. A configura\u00e7\u00e3o \u00e9 por c\u00e2mera, na chave \"protocol\", os valores esperados s\u00e3o \"udp\" ou \"tcp\".","title":"2.4.1"},{"location":"releases.html#240","text":"Inclu\u00eddo um observador no arquivo de configura\u00e7\u00f5es, para caso haja mudan\u00e7a, ele atualizar as vari\u00e1veis que sofreram mudan\u00e7as sem que haja necessidade de reiniciar a aplica\u00e7\u00e3o; Alterado o protocolo de conex\u00e3o na c\u00e2mera, de TCP para UDP, para evitar atrasos no v\u00eddeo, quando a rede for ruim e houver retransmiss\u00e3o de pacotes; Removido o suporte da c\u00e2mera Pumatronix temporariamente.","title":"2.4.0"},{"location":"releases.html#231","text":"Resolvido perda de conex\u00e3o ap\u00f3s reconex\u00e3o da c\u00e2mera; Removida a c\u00e2mera TP-LINK; Alterado delay snapshot de 0,5seg para 1,0seg, para garantir que o ve\u00edculo estar\u00e1 em um ponto melhor ao ser solicitado o snapshot; Alterada a confian\u00e7a m\u00ednima do primeiro caractere, para garantir que mesmo com um score menor, pode ser correto, sempre tenha placa dispon\u00edvel.","title":"2.3.1"},{"location":"releases.html#230","text":"Controle de LED Hikvision; Frames por snapshot c\u00e2meras Hikvision e Intelbras.","title":"2.3.0"},{"location":"releases.html#220","text":"WPS Segmentation Inclu\u00eddo. Criado a API de consulta das vagas, e as \u00faltimas altera\u00e7\u00f5es destas vagas. Corre\u00e7\u00e3o no snapshot da Intelbras, para incluir qual o canal ser\u00e1 feito.","title":"2.2.0"}]}