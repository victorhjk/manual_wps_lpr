{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"ParkingPlus: WPS_LPR Esta se\u00e7\u00e3o re\u00fane o manual e documenta\u00e7\u00f5es relacionados ao Parking Plus WPS_LPR. (L)icense (P)late (R)ecognition - Reconhecimento de Placas de Ve\u00edculos. O LPR \u00e9 um recurso que permite a identifica\u00e7\u00e3o de uma placa de ve\u00edculo no momento da sua entrada. A identifica\u00e7\u00e3o \u00e9 efetuada atrav\u00e9s do servi\u00e7o ParkingPlus:WPS_LPR que recebe as imagens das pistas atrav\u00e9s das c\u00e2meras que est\u00e3o instaladas para este fim, e executa o processo de OCR para obten\u00e7\u00e3o dos caracteres contido nas placas de ve\u00edculos. Para configurar o sistema operacional siga as etapas descritas na se\u00e7\u00e3o abaixo. Configura\u00e7\u00e3o Sistema Operacional .","title":"Inicio"},{"location":"index.html#parkingplus-wps_lpr","text":"Esta se\u00e7\u00e3o re\u00fane o manual e documenta\u00e7\u00f5es relacionados ao Parking Plus WPS_LPR. (L)icense (P)late (R)ecognition - Reconhecimento de Placas de Ve\u00edculos. O LPR \u00e9 um recurso que permite a identifica\u00e7\u00e3o de uma placa de ve\u00edculo no momento da sua entrada. A identifica\u00e7\u00e3o \u00e9 efetuada atrav\u00e9s do servi\u00e7o ParkingPlus:WPS_LPR que recebe as imagens das pistas atrav\u00e9s das c\u00e2meras que est\u00e3o instaladas para este fim, e executa o processo de OCR para obten\u00e7\u00e3o dos caracteres contido nas placas de ve\u00edculos. Para configurar o sistema operacional siga as etapas descritas na se\u00e7\u00e3o abaixo. Configura\u00e7\u00e3o Sistema Operacional .","title":"ParkingPlus: WPS_LPR"},{"location":"configuracao_sistema_operacional.html","text":"Configura\u00e7\u00e3o Sistema Operacional Nesse manual iremos abordar sobre a instala\u00e7\u00e3o dos pacotes necess\u00e1rios no sistema operacional que o servi\u00e7o ParkingPlus:WPS_LPR ir\u00e1 rodar. Pr\u00e9-Requisitos CentOS 7 Ubuntu Server 22.04 LTS (Recomendado) Debian 12 Entretanto por se tratar de container docker, tamb\u00e9m pode ser que funcione em outras distribui\u00e7\u00f5es e plataformas, por\u00e9m n\u00e3o foi testado. Instala\u00e7\u00e3o Sistema_Operacional Os seguintes procedimentos s\u00e3o necess\u00e1rios para o correto funcionamento do sistema WPS_LPR 1. Cria\u00e7\u00e3o de pastas /instalacoes /WPSBrasil sudo mkdir -p /instalacoes /WPSBrasil 2. Instala\u00e7\u00e3o de reposit\u00f3rios elrepo (centos) yum install https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm -y epel (centos) yum install epel-release -y 3. Atualiza\u00e7\u00e3o dos reposit\u00f3rios e sistema operacional CentOS sudo yum update -y Ubuntu sudo apt-get update && apt upgrade 4. Instala\u00e7\u00e3o de pacotes necess\u00e1rios wget nano ntpdate vim mlocate java-1.8.0-openjdk default-jdk pciutils python3 glances gdown CentOS yum install -y wget nano ntpdate vim mlocate java-1.8.0-openjdk \\ default-jdk pciutils python3 python3-pip pip3 install --upgrade pip pip install glances gdown py3nvml Ubuntu apt --fix-broken install apt-get install wget nano wget ntpdate vim mlocate default-jdk pciutils \\ apt-transport-https ca-certificates curl software-properties-common python3 python3-pip -y pip3 install --upgrade pip pip install glances gdown py3nvml 5. Instala\u00e7\u00e3o do Docker, docker-compose, nvidia-docker-container CentOS docker curl -fsSL https://get.docker.com/ | sh docker-compose sudo curl -L https://github.com/docker/compose/releases/download/v2.3.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose nvidia-container-toolkit curl -s -L https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo | \\ sudo tee /etc/yum.repos.d/nvidia-container-toolkit.repo sudo yum install -y nvidia-container-toolkit systemctl restart docker Ubuntu docker curl -fsSL https://get.docker.com/ | sh docker-compose sudo curl -L https://github.com/docker/compose/releases/download/v2.3.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose nvidia-container-toolkit curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\ && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\ sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\ sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list \\ && \\ sudo apt-get update sudo apt-get install -y nvidia-container-toolkit systemctl restart docker 5.1. Execute o seguinte comando para configurar o daemon do docker: nvidia-ctk runtime configure --runtime=docker --config=/etc/docker/daemon.json systemctl restart docker.service 6. Instala\u00e7\u00e3o de Drivers Nvidia (Quando GPU dispon\u00edvel) Centos yum -y install nvidia-detect yum install -y kmod-nvidia yum remove -y xorg-x11-drivers xorg-x11-drv-nouveau Ubuntu sudo apt install nvidia-driver-535 nvidia-dkms-535 -y 7. Exportar v\u00e1rivel que controla uso de GPU ou n\u00e3o. 7.1. Exportar vari\u00e1vel de ambiente para o docker enxergar se existe placa de v\u00eddeo instalada na m\u00e1quina, somente em caso de GPU . echo \"export NVIDIA_VISIBLE_DEVICES=all\" >> ~/.bashrc 7.2. Exportar vari\u00e1vel de ambiente caso n\u00e3o haja GPU . echo \"export NVIDIA_VISIBLE_DEVICES=void\" >> ~/.bashrc 7.3. Exportando o nome da m\u00e1quina para o bashrc. Voc\u00ea pode alterar o nome da m\u00e1quina para corresponder ao nome da garagem, basta substituir WPS_LPR_Dev, por WPS_LPR_(nome_da_garagem) echo \"PS1='\\[\\033[1;31m\\]\\u\\[\\033[0;32m\\]@WPS_LPR_Dev\\[\\e[m\\] \\[\\e[1;34m\\]\\w\\[\\e[m\\] \\[\\e[1;32m\\]\\$\\[\\e[m\\] \\[\\e[1;37m\\]'\" >> ~/.bashrc >> ~/.bashrc source ~/.bashrc 8. Desabilitando a duplica\u00e7\u00e3o de logs do journal para o syslog echo \"if \\$programname == 'WpsLprConcentrator' then /dev/null\" >> /etc/rsyslog.conf sed -i -e 's/^$ModLoad imuxsock/#$ModLoad imuxsock/' -e 's/^$ModLoad imjournal/#$ModLoad imjournal/' /etc/rsyslog.conf sed -i -e 's/^module(load=\"imuxsock\")/#module(load=\"imuxsock\")/' -e 's/^module(load=\"imjournal\")/#module(load=\"imjournal\")/' /etc/rsyslog.conf systemctl restart rsyslog 9. Habilitando modo de performance da m\u00e1quina ( importante ) CentOS gdown 1Roq8tn0COhY-OSrUy_YRNEQuZzdnM4Uu rpm -ivh set_performance-1.0-1.x86_64.rpm systemctl start set_performance.service systemctl enable set_performance.service Ubuntu gdown 1NxFukxgIMhfG5xfh076dxFkglCtHjO4S dpkg -i set-performance_1.0-2_amd64.deb systemctl start set_performance.service systemctl enable set_performance.service","title":"Configura\u00e7\u00e3o Sistema Operacional"},{"location":"configuracao_sistema_operacional.html#configuracao-sistema-operacional","text":"Nesse manual iremos abordar sobre a instala\u00e7\u00e3o dos pacotes necess\u00e1rios no sistema operacional que o servi\u00e7o ParkingPlus:WPS_LPR ir\u00e1 rodar.","title":"Configura\u00e7\u00e3o Sistema Operacional"},{"location":"configuracao_sistema_operacional.html#pre-requisitos","text":"CentOS 7 Ubuntu Server 22.04 LTS (Recomendado) Debian 12 Entretanto por se tratar de container docker, tamb\u00e9m pode ser que funcione em outras distribui\u00e7\u00f5es e plataformas, por\u00e9m n\u00e3o foi testado.","title":"Pr\u00e9-Requisitos"},{"location":"configuracao_sistema_operacional.html#instalacao","text":"","title":"Instala\u00e7\u00e3o"},{"location":"configuracao_sistema_operacional.html#sistema_operacional","text":"Os seguintes procedimentos s\u00e3o necess\u00e1rios para o correto funcionamento do sistema WPS_LPR","title":"Sistema_Operacional"},{"location":"configuracao_sistema_operacional.html#1-criacao-de-pastas","text":"/instalacoes /WPSBrasil sudo mkdir -p /instalacoes /WPSBrasil","title":"1. Cria\u00e7\u00e3o de pastas"},{"location":"configuracao_sistema_operacional.html#2-instalacao-de-repositorios","text":"elrepo (centos) yum install https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm -y epel (centos) yum install epel-release -y","title":"2. Instala\u00e7\u00e3o de reposit\u00f3rios"},{"location":"configuracao_sistema_operacional.html#3-atualizacao-dos-repositorios-e-sistema-operacional","text":"CentOS sudo yum update -y Ubuntu sudo apt-get update && apt upgrade","title":"3. Atualiza\u00e7\u00e3o dos reposit\u00f3rios e sistema operacional"},{"location":"configuracao_sistema_operacional.html#4-instalacao-de-pacotes-necessarios","text":"wget nano ntpdate vim mlocate java-1.8.0-openjdk default-jdk pciutils python3 glances gdown CentOS yum install -y wget nano ntpdate vim mlocate java-1.8.0-openjdk \\ default-jdk pciutils python3 python3-pip pip3 install --upgrade pip pip install glances gdown py3nvml Ubuntu apt --fix-broken install apt-get install wget nano wget ntpdate vim mlocate default-jdk pciutils \\ apt-transport-https ca-certificates curl software-properties-common python3 python3-pip -y pip3 install --upgrade pip pip install glances gdown py3nvml","title":"4. Instala\u00e7\u00e3o de pacotes necess\u00e1rios"},{"location":"configuracao_sistema_operacional.html#5-instalacao-do-docker-docker-compose-nvidia-docker-container","text":"","title":"5. Instala\u00e7\u00e3o do Docker, docker-compose, nvidia-docker-container"},{"location":"configuracao_sistema_operacional.html#centos","text":"docker curl -fsSL https://get.docker.com/ | sh docker-compose sudo curl -L https://github.com/docker/compose/releases/download/v2.3.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose nvidia-container-toolkit curl -s -L https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo | \\ sudo tee /etc/yum.repos.d/nvidia-container-toolkit.repo sudo yum install -y nvidia-container-toolkit systemctl restart docker","title":"CentOS"},{"location":"configuracao_sistema_operacional.html#ubuntu","text":"docker curl -fsSL https://get.docker.com/ | sh docker-compose sudo curl -L https://github.com/docker/compose/releases/download/v2.3.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose nvidia-container-toolkit curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\ && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\ sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\ sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list \\ && \\ sudo apt-get update sudo apt-get install -y nvidia-container-toolkit systemctl restart docker","title":"Ubuntu"},{"location":"configuracao_sistema_operacional.html#51-execute-o-seguinte-comando-para-configurar-o-daemon-do-docker","text":"nvidia-ctk runtime configure --runtime=docker --config=/etc/docker/daemon.json systemctl restart docker.service","title":"5.1. Execute o seguinte comando para configurar o daemon do docker:"},{"location":"configuracao_sistema_operacional.html#6-instalacao-de-drivers-nvidia-quando-gpu-disponivel","text":"Centos yum -y install nvidia-detect yum install -y kmod-nvidia yum remove -y xorg-x11-drivers xorg-x11-drv-nouveau Ubuntu sudo apt install nvidia-driver-535 nvidia-dkms-535 -y","title":"6. Instala\u00e7\u00e3o de Drivers Nvidia (Quando GPU dispon\u00edvel)"},{"location":"configuracao_sistema_operacional.html#7-exportar-varivel-que-controla-uso-de-gpu-ou-nao","text":"","title":"7. Exportar v\u00e1rivel que controla uso de GPU ou n\u00e3o."},{"location":"configuracao_sistema_operacional.html#71-exportar-variavel-de-ambiente-para-o-docker-enxergar-se-existe-placa-de-video-instalada-na-maquina-somente-em-caso-de-gpu","text":"echo \"export NVIDIA_VISIBLE_DEVICES=all\" >> ~/.bashrc","title":"7.1. Exportar vari\u00e1vel de ambiente para o docker enxergar se existe placa de v\u00eddeo instalada na m\u00e1quina, somente em caso de GPU."},{"location":"configuracao_sistema_operacional.html#72-exportar-variavel-de-ambiente-caso-nao-haja-gpu","text":"echo \"export NVIDIA_VISIBLE_DEVICES=void\" >> ~/.bashrc","title":"7.2. Exportar vari\u00e1vel de ambiente caso n\u00e3o haja GPU."},{"location":"configuracao_sistema_operacional.html#73-exportando-o-nome-da-maquina-para-o-bashrc","text":"Voc\u00ea pode alterar o nome da m\u00e1quina para corresponder ao nome da garagem, basta substituir WPS_LPR_Dev, por WPS_LPR_(nome_da_garagem) echo \"PS1='\\[\\033[1;31m\\]\\u\\[\\033[0;32m\\]@WPS_LPR_Dev\\[\\e[m\\] \\[\\e[1;34m\\]\\w\\[\\e[m\\] \\[\\e[1;32m\\]\\$\\[\\e[m\\] \\[\\e[1;37m\\]'\" >> ~/.bashrc >> ~/.bashrc source ~/.bashrc","title":"7.3. Exportando o nome da m\u00e1quina para o bashrc."},{"location":"configuracao_sistema_operacional.html#8-desabilitando-a-duplicacao-de-logs-do-journal-para-o-syslog","text":"echo \"if \\$programname == 'WpsLprConcentrator' then /dev/null\" >> /etc/rsyslog.conf sed -i -e 's/^$ModLoad imuxsock/#$ModLoad imuxsock/' -e 's/^$ModLoad imjournal/#$ModLoad imjournal/' /etc/rsyslog.conf sed -i -e 's/^module(load=\"imuxsock\")/#module(load=\"imuxsock\")/' -e 's/^module(load=\"imjournal\")/#module(load=\"imjournal\")/' /etc/rsyslog.conf systemctl restart rsyslog","title":"8. Desabilitando a duplica\u00e7\u00e3o de logs do journal para o syslog"},{"location":"configuracao_sistema_operacional.html#9-habilitando-modo-de-performance-da-maquina-importante","text":"CentOS gdown 1Roq8tn0COhY-OSrUy_YRNEQuZzdnM4Uu rpm -ivh set_performance-1.0-1.x86_64.rpm systemctl start set_performance.service systemctl enable set_performance.service Ubuntu gdown 1NxFukxgIMhfG5xfh076dxFkglCtHjO4S dpkg -i set-performance_1.0-2_amd64.deb systemctl start set_performance.service systemctl enable set_performance.service","title":"9. Habilitando modo de performance da m\u00e1quina (importante)"},{"location":"erros.html","text":"Erros comuns Erros de importa\u00e7\u00e3o do imagem Erros de execu\u00e7\u00e3o","title":"Erros Comuns"},{"location":"erros.html#erros-comuns","text":"","title":"Erros comuns"},{"location":"erros.html#erros-de-importacao-do-imagem","text":"","title":"Erros de importa\u00e7\u00e3o do imagem"},{"location":"erros.html#erros-de-execucao","text":"","title":"Erros de execu\u00e7\u00e3o"},{"location":"execucao.html","text":"Execu\u00e7\u00e3o Siga essas etapas para executar o sistema de reconhecimento de placas de ve\u00edculos WPS_LPR: Configura\u00e7\u00e3o das c\u00e2meras 1. Configure a conex\u00e3o da(s) c\u00e2mera(s) no arquivo: /var/lib/ParkingPlus/WpsLpr/config/config.json 1.1 Aqui est\u00e1 um exemplo de como o arquivo config.json deve ser configurado para o funcionamento do sistema WPS_LPR , podem ser adicionadas v\u00e1rias c\u00e2meras para o processamento dentro do limite de processamento da m\u00e1quina. [ { \"camera_id\": \"1\", \"camera_type\": \"lpr\", \"camera_brand\": \"intelbras\", \"wps_topic\": \"WPS_LPR\", \"camera_ip\": \"192.168.1.108\", \"user\": \"wps\", \"password\": \"wpsbrasil2021\", \"channel_dvr\": \"1\", \"frame_ocr_rate\": 10, \"roi_size_x\": 1280, \"roi_size_y\": 720, \"roi_x\": 0, \"roi_y\": 0, \"limiar\": 20, \"plate_size_min\": 0, \"plate_size_max\": 0, \"image_size\": 0, \"ocr_mode\": 0, \"ocr_time\": 1, \"sector_id\": 1, \"parking_name\": \"\", \"protocol\": \"udp\", \"power_led\": 40, \"publish_interval\": 1000, \"parking_spaces_quantity\": 1, \"park_ids\": [] } ] Remova quaisquer coment\u00e1rios caso use esse exemplo. camera_id \u00e9 um n\u00famero sequencial que identifica a c\u00e2mera no arquivo e seus demais atributos; camera_ip \u00e9 o ip da c\u00e2mera que ser\u00e1 conectada; wps_topic t\u00f3pico do MQTT que as mensagens ser\u00e3o publicadas; user usu\u00e1rio da c\u00e2mera; password senha da c\u00e2mera; channel_dvr canal para conex\u00e3o com a c\u00e2mera, geralmente \u00e9 \"1\", quando for utilizar conex\u00e3o via DVR ou NVR verificar o n\u00famero do canal para se conectar; camera_brand \u00e9 a marca da c\u00e2mera, os modelos homologados s\u00e3o: \"intelbras\" ; \"hikvision\" ; \"positivo\" ; \"pumatronix\" . frame_ocr_rate \u00e9 a taxa de fps que ser\u00e1 passada para a c\u00e2mera, o WPS_LPR por default faz o OCR em uma imagem por segundo de cada c\u00e2mera, por\u00e9m ele n\u00e3o est\u00e1 mais vinculado a essa chave. PS : Para c\u00e2meras Hikvision e Intelbr\u00e1s mais atuais, utilize 25 ou 30; roi_size \u00e9 o tamanho da imagem que ser\u00e1 passada para o WPS_LPR fazer o OCR na imagem, o padr\u00e3o \u00e9 1280 para a largura e 720 para a altura; roi s\u00e3o os pontos iniciais para desenho de um ret\u00e2ngulo na imagem, para limitar a \u00e1rea de atua\u00e7\u00e3o do OCR na imagem. Um objetivo por exemplo \u00e9 que n\u00e3o seja feito OCR em pistas vizinhas; ocr_mode \u00e9 o tipo poss\u00edvel de OCR nos tipos de ve\u00edculos, que s\u00e3o: \"0\" somente carro; \"1\" somente moto; \"2\" carro e moto. camera_type \u00e9 o tipo de utiliza\u00e7\u00e3o que a c\u00e2mera ter\u00e1 no sistema WPS_LPR, que poder\u00e1 ser: \"lpr\" : Para reconhecimento das placas de ve\u00edculos; \"context\" : Para capturar fotos de c\u00e2meras de contexto, c\u00e2meras que ser\u00e3o posicionadas com o intuito de registrar diversas faces dos ve\u00edculos e do usu\u00e1rio do estacionamento; \"segmentation\" : Para utiliza\u00e7\u00e3o de reconhecimento de placas em vagas espec\u00edficas do estacionamento, bem como identificar se a vaga est\u00e1 livre ou ocupada. Cada c\u00e2mera poder\u00e1 monitorar de 1 a 4 vagas. limiar \u00e9 a quantidade de movimento para ativar o LPR, ou seja submeter o frame \u00e0 biblioteca de reconhecimento, caso a quantidade de movimento seja menor que o limiar, o frame ser\u00e1 descartado, at\u00e9 que a quantidade seja alcan\u00e7ada. Caso a quantidade seja superior ao limiar, e nos frames seguintes seja menor, o sistema verificar\u00e1 no \u00faltimo frame submetido, se houve placa detectada, caso sim, ele envia mais um frame, at\u00e9 que nenhuma placa seja detectada e n\u00e3o haja quantidade de movimento superior ao limiar. image_size \u00e9 o tamanho das imagens que ser\u00e3o enviadas na mensagem, os valores s\u00e3o: \"0\" 1280 x 720; \"1\" 800 x 450; \"2\" 640 x 360; \"9\" Sem imagem. plate_size_min \u00e9 o tamanho m\u00ednimo da placa para ser submetido ao OCR (0 \u00e9 desligado). plate_size_max \u00e9 o tamanho m\u00e1ximo da placa para ser submetido ao OCR (0 \u00e9 desligado). Esse valor deve ser obrigatoriamente maior que o \"plate_size_min\". ocr_time \u00e9 a quantidade de imagens por segundo que ser\u00e3o submetidas ao OCR no modo \" lpr \", este valor varia de 1 a 4 imagens por segundo, o padr\u00e3o \u00e9 1 por segundo, s\u00f3 aumente esse n\u00famero caso tenha reserva de recursos de processamento no Servidor de LPR. J\u00e1 no modo \" Segmentation \" \u00e9 o tempo em que uma imagem ser\u00e1 submetida ao OCR, esse tempo \u00e9 entre 10 e 40 segundos, o padr\u00e3o \u00e9 15 segundos. sector_id \u00e9 o ID do setor onde a c\u00e2mera \" segmentation \" est\u00e1 instalada, isso reflete na tarifa\u00e7\u00e3o do setor. parking_name \u00e9 o nome do setor, \u00e9 opcional. protocol \u00e9 o tipo de protocolo que ser\u00e1 usado para fazer o streaming das c\u00e2meras, o padr\u00e3o \u00e9 UDP, s\u00f3 use o protocolo TCP para fazer debug no sistema. power_led \u00e9 a pot\u00eancia do LED para c\u00e2meras Pumatronix, que contam com a luz branca, o padr\u00e3o \u00e9 40, \u00e9 importante verificar o funcionamento para evitar que a imagem da placa \"estoure\". publish_interval \u00e9 o tempo que a \"melhor\" placa ser\u00e1 publicada no MQTT, como agora a quantidade de OCR por segundo pode ser alterada, \u00e9 importante n\u00e3o \"inundar\" o terminal com v\u00e1rias publica\u00e7\u00f5es de placas, sendo assim, mesmo que a quantidade de OCR seja 4, ele ir\u00e1 publicar apenas 1 por segundo caso o tempo aqui seja 1000, e tamb\u00e9m com o intuito de melhorar a performance dos terminais com Mini PCs defasados, pode-se aumentar esse tempo, sem correr o risco de perder imagens para OCR como no m\u00e9todo antigo, antes era poss\u00edvel fazer 1 OCR a cada 2 segundos, agora \u00e9 poss\u00edvel fazer 2 OCRs em 2 segundos, e enviar apenas 1 placa a cada 2 segundos. Por padr\u00e3o o tempo \u00e9 1000, e ele varia entre 800 e 2000. parking_spaces_quantity \u00e9 a quantidade de vagas que ser\u00e3o monitoradas no m\u00e9todo \" segmentation \", entre 1 e 4 vagas. park_ids s\u00e3o os ids das vagas que ser\u00e3o monitoradas no m\u00e9todo \" segmentation \", entre 1 e 4 vagas. 1.2 Para adicionar outras c\u00e2meras basta seguir o layout, e repetir os par\u00e2metros com seus devidos valores. 1.3 Caso seja uma migra\u00e7\u00e3o e exista um arquivo supervisord.conf com as configura\u00e7\u00f5es das c\u00e2meras, pode-se utilizar um conversor de supervisor para json, execute os passos abaixo para us\u00e1-lo. gdown 1UVEM4WeaugcTujOQ7G2MPVBP3RPlPsp_ chmod +x converter_sup_to_docker ./converter_sup_to_docker Isso ir\u00e1 gerar um config.json na pasta /instalacoes, que poder\u00e1 ser copiado para o docker fazer a leitura das c\u00e2meras. Funcionamento do sistema WPS_LPR 2. O sistema assim que o container for iniciado j\u00e1 estar\u00e1 funcionando com as c\u00e2meras cadastradas no arquivo /var/lib/ParkingPlus/WpsLpr/config/config.json , qualquer altera\u00e7\u00e3o no arquivo o sistema processar\u00e1 as altera\u00e7\u00f5es, e far\u00e1 a devida a\u00e7\u00e3o, que poder\u00e1 ser adicionar uma nova c\u00e2mera, remover uma c\u00e2mera, alterar algum par\u00e2metro de alguma c\u00e2mera: Consultando Logs do Sistema 3. As informa\u00e7\u00f5es do sistema WPS_LPR, poder\u00e3o ser consultadas pelo log journal , pelo comando: journalctl CONTAINER_TAG=ParkingPlus:WPS_LPR Oportunamente pode se passar o par\u00e2metro -f, para visualizar o log em tempo real. journalctl -f CONTAINER_TAG=ParkingPlus:WPS_LPR --output cat .code-block { font-size: 0.7em; /* Ajusta o tamanho da fonte */ white-space: pre-wrap; /* Permite quebras de linha no conte\u00fado pre */ } Exemplo de C\u00f3digo 3.1 A sa\u00edda do comando ser\u00e1 conforme abaixo: Clique para expandir 2000-01-01 00:00:00,327 | INFO: ENTG1A_GYN | Conectando camera: 10.62.65.31:1 2000-01-01 00:00:00,328 | INFO: ENTG1B_GYN | Conectando camera: 10.62.65.32:1 2000-01-01 00:00:00,328 | INFO: ENT1718ESQ_GYN | Conectando camera: 10.62.65.33:1 2000-01-01 00:00:03,819 | INFO: ENTG1A_GYN | Camera conectada: 10.62.65.31 2000-01-01 00:00:03,820 | INFO: ENTG1A_GYN | Limiar de movimento: 10 | OCR por Segundo : 1 2000-01-01 00:00:07,053 | INFO: ENTG1B_GYN | Camera conectada: 10.62.65.32 2000-01-01 00:00:07,054 | INFO: ENTG1B_GYN | Limiar de movimento: 10 | OCR por Segundo : 1 2000-01-01 00:00:07,287 | INFO: ENTG1A_GYN | Frame n\u00famero: 10 | Placa: SBZ3J28 | Confianca: 1.0 2000-01-01 00:00:09,271 | INFO: ENTG1A_GYN | Frame n\u00famero: 12 | Placa: SBZ3J28 | Confianca: 1.0 2000-01-01 00:00:09,305 | INFO: ENT1718ESQ_GYN | Camera conectada: 10.62.65.33 2000-01-01 00:00:14,292 | INFO: ENTG1A_GYN | Frame n\u00famero: 14 | Placa: SBZ3J28 | Confianca: 1.0 2000-01-01 00:01:29,448 | INFO: ENT1718ESQ_GYN | Frame n\u00famero: 25 | Placa: NKX7007 | Confianca: 1.0 2000-01-01 00:01:29,775 | INFO: ENTG1B_GYN | Frame n\u00famero: 91 | Placa: SDA6F87 | Confianca: 1.0 2000-01-01 00:01:30,651 | INFO: ENT1718ESQ_GYN | Frame n\u00famero: 26 | Placa: NKX7007 | Confianca: 1.0 2000-01-01 00:01:31,291 | INFO: ENTG1B_GYN | Frame n\u00famero: 93 | Placa: SDA6F87 | Confianca: 1.0 2000-01-01 00:01:35,773 | ERROR: SAIE2DIR | O IP 10.62.65.45 n\u00e3o respondeu. Tentando novamente em 30 segundos... Alterando n\u00edvel de log 4. Para alterar o n\u00edvel de log, altere o arquivo: /var/lib/ParkingPlus/WpsLpr/config/settings.xml Caso o arquivo n\u00e3o exista, utilize o sample na pasta para cri\u00e1-lo, e altere o n\u00edvel caso seja necess\u00e1rio. O log vem configurado com n\u00edvel INFO , que exibe as informa\u00e7\u00f5es conforme acima, caso queira depurar alguma informa\u00e7\u00e3o, como o tempo gasto em cada etapa, altere para DEBUG ou TRACE , e ap\u00f3s as analises realizadas, retorne para INFO . <settings> <log_level>INFO</log_level> </settings> 4.1 A partir da vers\u00e3o 2.6.0 a mudan\u00e7a no n\u00edvel do LOG ser\u00e1 din\u00e2mica, ou seja ao alterar no arquivo o LOG j\u00e1 passar\u00e1 a exibir o LOG nesse n\u00edvel sem a necessidade de reiniciar a aplica\u00e7\u00e3o. Verificando c\u00e2meras online no sistema 5. Para verificar quantas e quais c\u00e2meras s\u00e3o, \u00e9 necess\u00e1rio fazer uma requisi\u00e7\u00e3o GET HTTP, no seguinte endpoint: http://ip_do_servidor_lpr:5000/cgi-bin/running_cameras.cgi 5.1 O retorno da requisi\u00e7\u00e3o ser\u00e1 algo do tipo: Clique para expandir Cameras offline \"SAIE2DIR - 10.62.65.45 (Offline) - SAIE2DIR - 10.62.65.45 (Offline)\" Cameras online \"ENTG1A - 10.62.65.31 (Online) - ENTG1B - 10.62.65.32 (Online) - ENT1718ESQ - 10.62.65.33 (Online) - ENT1718DIR - 10.62.65.34 (Online) - ENTE1 - 10.62.65.36 (Online) - ENTE2ESQ - 10.62.65.37 (Online) - ENTE2DIR - 10.62.65.38 (Online) - SAI1718ESQ - 10.62.65.41 (Online) ... - SAIE1 - 10.62.65.44 (Online) - SAIE3 - 10.62.65.46 (Online)\" Total de cameras offline 2 Total de cameras online 24 Solicitando um snaphot de uma c\u00e2mera 6. Para solicitar um snapshot, \u00e9 necess\u00e1rio fazer uma requisi\u00e7\u00e3o GET HTTP, no seguinte endpoint: http://ip_do_servidor_lpr:5000/cgi-bin/snapshot.cgi 6.1 \u00c9 necess\u00e1rio passar tamb\u00e9m o argumento wps_topic , exemplo: http://127.0.0.1:5000/cgi-bin/snapshot.cgi?wps_topic=TESTE O sistema retornar\u00e1 imediatamente a \u00faltima imagem salva em buffer referente ao wps_topic fornecido. Segue um exemplo de resposta da solicita\u00e7\u00e3o enviada: { \"timestamp\": timestamp, \"object_type\": object_type, \"imagem\": { \"data\": snapshot_lpr, \"type\": \"image/jpg\", } } As imagens est\u00e3o codificadas em base64, com resolu\u00e7\u00e3o 1280x720 e formato JPG. Verificando quantidade de Threads 7. Para verificar quantas threads do sistema WPS_LPR est\u00e3o ativas, basta fazer uma requisi\u00e7\u00e3o GET HTTP no endpoint abaixo: http://ip_do_servidor_lpr:5000/cgi-bin/threads.cgi O retorno ser\u00e1 a quantidade de threads em execu\u00e7\u00e3o, usado para DEBUG. Reiniciando a aplica\u00e7\u00e3o 8. Para reiniciar o sistema WPS_LPR, utilize o endpoint abaixo: http://ip_do_servidor_lpr:5000/cgi-bin/reboot_wpslpr.cgi Verificando vagas do modo Segmentation 9. Para obter a lista das vagas monitoradas pelas c\u00e2meras do tipo \" segmentation \": http://ip_do_servidor_lpr:5000/general/spaces O sistema retornar\u00e1 algo como: { \"id\": 1, \"name\": WPS_LPR Vaga 1\", \"sectorId\": 1, \"sectorName\": WPS, \"levelId\": 1, \"levelName\": G1, \"parkingId\": 1, \"parkingName\": WPS G1, \"tariffZone\": 1, \"disabled\": False, \"handicap\": False, \"xCoord\": 0, \"yCoord\": 0 } 10. Para obter uma atualiza\u00e7\u00e3o das vagas monitoradas pelas c\u00e2meras do tipo \" segmentation \": http://ip_do_servidor_lpr:5000/parkingSpaces/status/x Onde \" x \" \u00e9 o tempo em segundos considerados para a consulta Obtendo a placa com o modo Rekognition 11. Para submeter uma imagem \u00fanica para reconhecer a placa, utilize o m\u00e9todo \" rekognition \" http://ip_do_servidor_lpr:5000/cgi-bin/rekognition.cgi A imagem pode estar nas extens\u00f5es, bmp , jpg ou png , tamb\u00e9m \u00e9 aceito em base64 . Para enviar, utilize o m\u00e9todo POST, no corpo da mensagem coloque image na key , e a imagem que quer submeter em value . O retorno da solicita\u00e7\u00e3o ser\u00e1 o seguinte: { \"timestamp\": \"2024-11-07 14:47:28.931\", \"object_type\": \"CAR\", \"coor_object\": { \"xmin\": 183, \"xmax\": 857, \"ymin\": 171, \"ymax\": 558 }, \"plate_number\": \"SDH1I20\", \"confidence\": 1.0, \"car_model\": \"RAM - rampage\" }","title":"Execu\u00e7\u00e3o"},{"location":"execucao.html#execucao","text":"Siga essas etapas para executar o sistema de reconhecimento de placas de ve\u00edculos WPS_LPR:","title":"Execu\u00e7\u00e3o"},{"location":"execucao.html#configuracao-das-cameras","text":"1. Configure a conex\u00e3o da(s) c\u00e2mera(s) no arquivo: /var/lib/ParkingPlus/WpsLpr/config/config.json 1.1 Aqui est\u00e1 um exemplo de como o arquivo config.json deve ser configurado para o funcionamento do sistema WPS_LPR , podem ser adicionadas v\u00e1rias c\u00e2meras para o processamento dentro do limite de processamento da m\u00e1quina. [ { \"camera_id\": \"1\", \"camera_type\": \"lpr\", \"camera_brand\": \"intelbras\", \"wps_topic\": \"WPS_LPR\", \"camera_ip\": \"192.168.1.108\", \"user\": \"wps\", \"password\": \"wpsbrasil2021\", \"channel_dvr\": \"1\", \"frame_ocr_rate\": 10, \"roi_size_x\": 1280, \"roi_size_y\": 720, \"roi_x\": 0, \"roi_y\": 0, \"limiar\": 20, \"plate_size_min\": 0, \"plate_size_max\": 0, \"image_size\": 0, \"ocr_mode\": 0, \"ocr_time\": 1, \"sector_id\": 1, \"parking_name\": \"\", \"protocol\": \"udp\", \"power_led\": 40, \"publish_interval\": 1000, \"parking_spaces_quantity\": 1, \"park_ids\": [] } ] Remova quaisquer coment\u00e1rios caso use esse exemplo. camera_id \u00e9 um n\u00famero sequencial que identifica a c\u00e2mera no arquivo e seus demais atributos; camera_ip \u00e9 o ip da c\u00e2mera que ser\u00e1 conectada; wps_topic t\u00f3pico do MQTT que as mensagens ser\u00e3o publicadas; user usu\u00e1rio da c\u00e2mera; password senha da c\u00e2mera; channel_dvr canal para conex\u00e3o com a c\u00e2mera, geralmente \u00e9 \"1\", quando for utilizar conex\u00e3o via DVR ou NVR verificar o n\u00famero do canal para se conectar; camera_brand \u00e9 a marca da c\u00e2mera, os modelos homologados s\u00e3o: \"intelbras\" ; \"hikvision\" ; \"positivo\" ; \"pumatronix\" . frame_ocr_rate \u00e9 a taxa de fps que ser\u00e1 passada para a c\u00e2mera, o WPS_LPR por default faz o OCR em uma imagem por segundo de cada c\u00e2mera, por\u00e9m ele n\u00e3o est\u00e1 mais vinculado a essa chave. PS : Para c\u00e2meras Hikvision e Intelbr\u00e1s mais atuais, utilize 25 ou 30; roi_size \u00e9 o tamanho da imagem que ser\u00e1 passada para o WPS_LPR fazer o OCR na imagem, o padr\u00e3o \u00e9 1280 para a largura e 720 para a altura; roi s\u00e3o os pontos iniciais para desenho de um ret\u00e2ngulo na imagem, para limitar a \u00e1rea de atua\u00e7\u00e3o do OCR na imagem. Um objetivo por exemplo \u00e9 que n\u00e3o seja feito OCR em pistas vizinhas; ocr_mode \u00e9 o tipo poss\u00edvel de OCR nos tipos de ve\u00edculos, que s\u00e3o: \"0\" somente carro; \"1\" somente moto; \"2\" carro e moto. camera_type \u00e9 o tipo de utiliza\u00e7\u00e3o que a c\u00e2mera ter\u00e1 no sistema WPS_LPR, que poder\u00e1 ser: \"lpr\" : Para reconhecimento das placas de ve\u00edculos; \"context\" : Para capturar fotos de c\u00e2meras de contexto, c\u00e2meras que ser\u00e3o posicionadas com o intuito de registrar diversas faces dos ve\u00edculos e do usu\u00e1rio do estacionamento; \"segmentation\" : Para utiliza\u00e7\u00e3o de reconhecimento de placas em vagas espec\u00edficas do estacionamento, bem como identificar se a vaga est\u00e1 livre ou ocupada. Cada c\u00e2mera poder\u00e1 monitorar de 1 a 4 vagas. limiar \u00e9 a quantidade de movimento para ativar o LPR, ou seja submeter o frame \u00e0 biblioteca de reconhecimento, caso a quantidade de movimento seja menor que o limiar, o frame ser\u00e1 descartado, at\u00e9 que a quantidade seja alcan\u00e7ada. Caso a quantidade seja superior ao limiar, e nos frames seguintes seja menor, o sistema verificar\u00e1 no \u00faltimo frame submetido, se houve placa detectada, caso sim, ele envia mais um frame, at\u00e9 que nenhuma placa seja detectada e n\u00e3o haja quantidade de movimento superior ao limiar. image_size \u00e9 o tamanho das imagens que ser\u00e3o enviadas na mensagem, os valores s\u00e3o: \"0\" 1280 x 720; \"1\" 800 x 450; \"2\" 640 x 360; \"9\" Sem imagem. plate_size_min \u00e9 o tamanho m\u00ednimo da placa para ser submetido ao OCR (0 \u00e9 desligado). plate_size_max \u00e9 o tamanho m\u00e1ximo da placa para ser submetido ao OCR (0 \u00e9 desligado). Esse valor deve ser obrigatoriamente maior que o \"plate_size_min\". ocr_time \u00e9 a quantidade de imagens por segundo que ser\u00e3o submetidas ao OCR no modo \" lpr \", este valor varia de 1 a 4 imagens por segundo, o padr\u00e3o \u00e9 1 por segundo, s\u00f3 aumente esse n\u00famero caso tenha reserva de recursos de processamento no Servidor de LPR. J\u00e1 no modo \" Segmentation \" \u00e9 o tempo em que uma imagem ser\u00e1 submetida ao OCR, esse tempo \u00e9 entre 10 e 40 segundos, o padr\u00e3o \u00e9 15 segundos. sector_id \u00e9 o ID do setor onde a c\u00e2mera \" segmentation \" est\u00e1 instalada, isso reflete na tarifa\u00e7\u00e3o do setor. parking_name \u00e9 o nome do setor, \u00e9 opcional. protocol \u00e9 o tipo de protocolo que ser\u00e1 usado para fazer o streaming das c\u00e2meras, o padr\u00e3o \u00e9 UDP, s\u00f3 use o protocolo TCP para fazer debug no sistema. power_led \u00e9 a pot\u00eancia do LED para c\u00e2meras Pumatronix, que contam com a luz branca, o padr\u00e3o \u00e9 40, \u00e9 importante verificar o funcionamento para evitar que a imagem da placa \"estoure\". publish_interval \u00e9 o tempo que a \"melhor\" placa ser\u00e1 publicada no MQTT, como agora a quantidade de OCR por segundo pode ser alterada, \u00e9 importante n\u00e3o \"inundar\" o terminal com v\u00e1rias publica\u00e7\u00f5es de placas, sendo assim, mesmo que a quantidade de OCR seja 4, ele ir\u00e1 publicar apenas 1 por segundo caso o tempo aqui seja 1000, e tamb\u00e9m com o intuito de melhorar a performance dos terminais com Mini PCs defasados, pode-se aumentar esse tempo, sem correr o risco de perder imagens para OCR como no m\u00e9todo antigo, antes era poss\u00edvel fazer 1 OCR a cada 2 segundos, agora \u00e9 poss\u00edvel fazer 2 OCRs em 2 segundos, e enviar apenas 1 placa a cada 2 segundos. Por padr\u00e3o o tempo \u00e9 1000, e ele varia entre 800 e 2000. parking_spaces_quantity \u00e9 a quantidade de vagas que ser\u00e3o monitoradas no m\u00e9todo \" segmentation \", entre 1 e 4 vagas. park_ids s\u00e3o os ids das vagas que ser\u00e3o monitoradas no m\u00e9todo \" segmentation \", entre 1 e 4 vagas. 1.2 Para adicionar outras c\u00e2meras basta seguir o layout, e repetir os par\u00e2metros com seus devidos valores. 1.3 Caso seja uma migra\u00e7\u00e3o e exista um arquivo supervisord.conf com as configura\u00e7\u00f5es das c\u00e2meras, pode-se utilizar um conversor de supervisor para json, execute os passos abaixo para us\u00e1-lo. gdown 1UVEM4WeaugcTujOQ7G2MPVBP3RPlPsp_ chmod +x converter_sup_to_docker ./converter_sup_to_docker Isso ir\u00e1 gerar um config.json na pasta /instalacoes, que poder\u00e1 ser copiado para o docker fazer a leitura das c\u00e2meras.","title":"Configura\u00e7\u00e3o das c\u00e2meras"},{"location":"execucao.html#funcionamento-do-sistema-wps_lpr","text":"2. O sistema assim que o container for iniciado j\u00e1 estar\u00e1 funcionando com as c\u00e2meras cadastradas no arquivo /var/lib/ParkingPlus/WpsLpr/config/config.json , qualquer altera\u00e7\u00e3o no arquivo o sistema processar\u00e1 as altera\u00e7\u00f5es, e far\u00e1 a devida a\u00e7\u00e3o, que poder\u00e1 ser adicionar uma nova c\u00e2mera, remover uma c\u00e2mera, alterar algum par\u00e2metro de alguma c\u00e2mera:","title":"Funcionamento do sistema WPS_LPR"},{"location":"execucao.html#consultando-logs-do-sistema","text":"3. As informa\u00e7\u00f5es do sistema WPS_LPR, poder\u00e3o ser consultadas pelo log journal , pelo comando: journalctl CONTAINER_TAG=ParkingPlus:WPS_LPR Oportunamente pode se passar o par\u00e2metro -f, para visualizar o log em tempo real. journalctl -f CONTAINER_TAG=ParkingPlus:WPS_LPR --output cat .code-block { font-size: 0.7em; /* Ajusta o tamanho da fonte */ white-space: pre-wrap; /* Permite quebras de linha no conte\u00fado pre */ } Exemplo de C\u00f3digo 3.1 A sa\u00edda do comando ser\u00e1 conforme abaixo: Clique para expandir 2000-01-01 00:00:00,327 | INFO: ENTG1A_GYN | Conectando camera: 10.62.65.31:1 2000-01-01 00:00:00,328 | INFO: ENTG1B_GYN | Conectando camera: 10.62.65.32:1 2000-01-01 00:00:00,328 | INFO: ENT1718ESQ_GYN | Conectando camera: 10.62.65.33:1 2000-01-01 00:00:03,819 | INFO: ENTG1A_GYN | Camera conectada: 10.62.65.31 2000-01-01 00:00:03,820 | INFO: ENTG1A_GYN | Limiar de movimento: 10 | OCR por Segundo : 1 2000-01-01 00:00:07,053 | INFO: ENTG1B_GYN | Camera conectada: 10.62.65.32 2000-01-01 00:00:07,054 | INFO: ENTG1B_GYN | Limiar de movimento: 10 | OCR por Segundo : 1 2000-01-01 00:00:07,287 | INFO: ENTG1A_GYN | Frame n\u00famero: 10 | Placa: SBZ3J28 | Confianca: 1.0 2000-01-01 00:00:09,271 | INFO: ENTG1A_GYN | Frame n\u00famero: 12 | Placa: SBZ3J28 | Confianca: 1.0 2000-01-01 00:00:09,305 | INFO: ENT1718ESQ_GYN | Camera conectada: 10.62.65.33 2000-01-01 00:00:14,292 | INFO: ENTG1A_GYN | Frame n\u00famero: 14 | Placa: SBZ3J28 | Confianca: 1.0 2000-01-01 00:01:29,448 | INFO: ENT1718ESQ_GYN | Frame n\u00famero: 25 | Placa: NKX7007 | Confianca: 1.0 2000-01-01 00:01:29,775 | INFO: ENTG1B_GYN | Frame n\u00famero: 91 | Placa: SDA6F87 | Confianca: 1.0 2000-01-01 00:01:30,651 | INFO: ENT1718ESQ_GYN | Frame n\u00famero: 26 | Placa: NKX7007 | Confianca: 1.0 2000-01-01 00:01:31,291 | INFO: ENTG1B_GYN | Frame n\u00famero: 93 | Placa: SDA6F87 | Confianca: 1.0 2000-01-01 00:01:35,773 | ERROR: SAIE2DIR | O IP 10.62.65.45 n\u00e3o respondeu. Tentando novamente em 30 segundos...","title":"Consultando Logs do Sistema"},{"location":"execucao.html#alterando-nivel-de-log","text":"4. Para alterar o n\u00edvel de log, altere o arquivo: /var/lib/ParkingPlus/WpsLpr/config/settings.xml Caso o arquivo n\u00e3o exista, utilize o sample na pasta para cri\u00e1-lo, e altere o n\u00edvel caso seja necess\u00e1rio. O log vem configurado com n\u00edvel INFO , que exibe as informa\u00e7\u00f5es conforme acima, caso queira depurar alguma informa\u00e7\u00e3o, como o tempo gasto em cada etapa, altere para DEBUG ou TRACE , e ap\u00f3s as analises realizadas, retorne para INFO . <settings> <log_level>INFO</log_level> </settings> 4.1 A partir da vers\u00e3o 2.6.0 a mudan\u00e7a no n\u00edvel do LOG ser\u00e1 din\u00e2mica, ou seja ao alterar no arquivo o LOG j\u00e1 passar\u00e1 a exibir o LOG nesse n\u00edvel sem a necessidade de reiniciar a aplica\u00e7\u00e3o.","title":"Alterando n\u00edvel de log"},{"location":"execucao.html#verificando-cameras-online-no-sistema","text":"5. Para verificar quantas e quais c\u00e2meras s\u00e3o, \u00e9 necess\u00e1rio fazer uma requisi\u00e7\u00e3o GET HTTP, no seguinte endpoint: http://ip_do_servidor_lpr:5000/cgi-bin/running_cameras.cgi 5.1 O retorno da requisi\u00e7\u00e3o ser\u00e1 algo do tipo: Clique para expandir Cameras offline \"SAIE2DIR - 10.62.65.45 (Offline) - SAIE2DIR - 10.62.65.45 (Offline)\" Cameras online \"ENTG1A - 10.62.65.31 (Online) - ENTG1B - 10.62.65.32 (Online) - ENT1718ESQ - 10.62.65.33 (Online) - ENT1718DIR - 10.62.65.34 (Online) - ENTE1 - 10.62.65.36 (Online) - ENTE2ESQ - 10.62.65.37 (Online) - ENTE2DIR - 10.62.65.38 (Online) - SAI1718ESQ - 10.62.65.41 (Online) ... - SAIE1 - 10.62.65.44 (Online) - SAIE3 - 10.62.65.46 (Online)\" Total de cameras offline 2 Total de cameras online 24","title":"Verificando c\u00e2meras online no sistema"},{"location":"execucao.html#solicitando-um-snaphot-de-uma-camera","text":"6. Para solicitar um snapshot, \u00e9 necess\u00e1rio fazer uma requisi\u00e7\u00e3o GET HTTP, no seguinte endpoint: http://ip_do_servidor_lpr:5000/cgi-bin/snapshot.cgi 6.1 \u00c9 necess\u00e1rio passar tamb\u00e9m o argumento wps_topic , exemplo: http://127.0.0.1:5000/cgi-bin/snapshot.cgi?wps_topic=TESTE O sistema retornar\u00e1 imediatamente a \u00faltima imagem salva em buffer referente ao wps_topic fornecido. Segue um exemplo de resposta da solicita\u00e7\u00e3o enviada: { \"timestamp\": timestamp, \"object_type\": object_type, \"imagem\": { \"data\": snapshot_lpr, \"type\": \"image/jpg\", } } As imagens est\u00e3o codificadas em base64, com resolu\u00e7\u00e3o 1280x720 e formato JPG.","title":"Solicitando um snaphot de uma c\u00e2mera"},{"location":"execucao.html#verificando-quantidade-de-threads","text":"7. Para verificar quantas threads do sistema WPS_LPR est\u00e3o ativas, basta fazer uma requisi\u00e7\u00e3o GET HTTP no endpoint abaixo: http://ip_do_servidor_lpr:5000/cgi-bin/threads.cgi O retorno ser\u00e1 a quantidade de threads em execu\u00e7\u00e3o, usado para DEBUG.","title":"Verificando quantidade de Threads"},{"location":"execucao.html#reiniciando-a-aplicacao","text":"8. Para reiniciar o sistema WPS_LPR, utilize o endpoint abaixo: http://ip_do_servidor_lpr:5000/cgi-bin/reboot_wpslpr.cgi","title":"Reiniciando a aplica\u00e7\u00e3o"},{"location":"execucao.html#verificando-vagas-do-modo-segmentation","text":"9. Para obter a lista das vagas monitoradas pelas c\u00e2meras do tipo \" segmentation \": http://ip_do_servidor_lpr:5000/general/spaces O sistema retornar\u00e1 algo como: { \"id\": 1, \"name\": WPS_LPR Vaga 1\", \"sectorId\": 1, \"sectorName\": WPS, \"levelId\": 1, \"levelName\": G1, \"parkingId\": 1, \"parkingName\": WPS G1, \"tariffZone\": 1, \"disabled\": False, \"handicap\": False, \"xCoord\": 0, \"yCoord\": 0 } 10. Para obter uma atualiza\u00e7\u00e3o das vagas monitoradas pelas c\u00e2meras do tipo \" segmentation \": http://ip_do_servidor_lpr:5000/parkingSpaces/status/x Onde \" x \" \u00e9 o tempo em segundos considerados para a consulta","title":"Verificando vagas do modo Segmentation"},{"location":"execucao.html#obtendo-a-placa-com-o-modo-rekognition","text":"11. Para submeter uma imagem \u00fanica para reconhecer a placa, utilize o m\u00e9todo \" rekognition \" http://ip_do_servidor_lpr:5000/cgi-bin/rekognition.cgi A imagem pode estar nas extens\u00f5es, bmp , jpg ou png , tamb\u00e9m \u00e9 aceito em base64 . Para enviar, utilize o m\u00e9todo POST, no corpo da mensagem coloque image na key , e a imagem que quer submeter em value . O retorno da solicita\u00e7\u00e3o ser\u00e1 o seguinte: { \"timestamp\": \"2024-11-07 14:47:28.931\", \"object_type\": \"CAR\", \"coor_object\": { \"xmin\": 183, \"xmax\": 857, \"ymin\": 171, \"ymax\": 558 }, \"plate_number\": \"SDH1I20\", \"confidence\": 1.0, \"car_model\": \"RAM - rampage\" }","title":"Obtendo a placa com o modo Rekognition"},{"location":"instalacao.html","text":"Configura\u00e7\u00e3o ParkingPlus-WPS_LPR Pr\u00e9-Requisitos Sistema operacional instalado e configurado. Docker do MQTT importado e em execu\u00e7\u00e3o. Instala\u00e7\u00e3o Nesta etapa considera que todas as demais depend\u00eancias do Sistema Operacional escolhido j\u00e1 foram devidamente instaladas, para consultar quais s\u00e3o elas e o procedimento de instala\u00e7\u00e3o v\u00e1 at\u00e9 a se\u00e7\u00e3o Configura\u00e7\u00e3o Sistema Operacional . Siga estas etapas para configurar o ambiente de desenvolvimento e executar o container com o sistema WPS_LPR: Vers\u00e2o Atual: \"2.7.3\" Baixe a imagem ParkingPlus:WPS_LPR mais recente dispon\u00edvel no resposit\u00f3rio. Arquivos: - ParkingPlus-WPSLPR-2.7.3.tgz - ParkingPlus-WPSLPR-2.7.3_cpu.tgz Gerar token para autentica\u00e7\u00e3o: OAuth Playground Escolher a API: Cloud Storage API v1 https://www.googleapis.com/auth/devstorage.read_only Clique em Authorize API . Escolha sua conta da wps-sa . Clique em Exchange authorization code for tokens . Copie o Access Token e substitua em access_token na chamada do curl abaixo. Ou crie um variavel de ambiente com o conte\u00fado, token. Par\u00e2metros para download da imagem BUCKET_NAME : lpr-wps-v1 OBJECT_NAME : nome do arquivo (ex.: ParkingPlus-WPSLPR-2.7.0.tgz ) SAVE_TO_LOCATION : local onde deseja salvar o arquivo curl -X GET \\ -H \"Authorization: Bearer <access_token>\" \\ -o \"<SAVE_TO_LOCATION>\" \\ \"https://storage.googleapis.com/storage/v1/b/<BUCKET_NAME>/o/<OBJECT_NAME>?alt=media\" Exemplo de Uso curl -X GET \\ -H \"Authorization: Bearer $token\" \\ -o \"/instalacoes/ParkingPlus-WPSLPR-2.7.3.tgz\" \\ \"https://storage.googleapis.com/storage/v1/b/lpr-wps-v1/o/ParkingPlus-WPSLPR-2.7.3.tgz?alt=media\" Instala\u00e7\u00e3o de pacotes necess\u00e1rios Instale o python3.11 (Ubuntu) sudo apt install python3.11 Instale o pkplus-cli (Ubuntu) wget https://intranet.parkingplus.com.br/pub/Parking%20Plus/pkplus-cli/3.0.0/pkplus-cli_3.0.0-1_all.deb \\ --no-check-certificate --http-user='seu_usuario' --ask-password apt install ./pkplus-cli_3.0.0-1_all.deb mkdir -p /var/lib/pkplus-svc Carregue a imagem com o pkplus-cli (dispon\u00edvel para Ubuntu, e CentOS7 sem GPU ) pkplus-cli svc import-file ParkingPlus:WPSLPR-x.y.z.tgz Nas vers\u00f5es com CentOS7 com GPU importe o tgz. \ud83d\udc4d P.S caso seja a vers\u00e3o CPU, o pkplus-cli \u00e9 capaz de rod\u00e1-la tamb\u00e9m tar -xf ParkingPlus:WPSLPR-x.y.z.tgz docker load -i images.tar Ap\u00f3s a importa\u00e7\u00e3o inicie a imagem com pkplus-cli pkplus-cli svc enable ParkingPlus:WPSLPR:x.y.z No CentOS docker-compose up -d \u26a0\ufe0f Aten\u00e7\u00e3o! Caso ap\u00f3s executar o container receba um erro de: unknown or invalid runtime name: nvidia , consulte a se\u00e7\u00e3o configura\u00e7\u00e3o do daemon do docker . Ao iniciar o container, o sistema j\u00e1 estar\u00e1 em funcionamento, lendo o arquivo config.json , para executar as c\u00e2meras cadastradas, para adicionar, alterar ou remover c\u00e2meras, siga para a pr\u00f3xima se\u00e7\u00e3o.","title":"Instala\u00e7\u00e3o"},{"location":"instalacao.html#configuracao-parkingplus-wps_lpr","text":"","title":"Configura\u00e7\u00e3o ParkingPlus-WPS_LPR"},{"location":"instalacao.html#pre-requisitos","text":"Sistema operacional instalado e configurado. Docker do MQTT importado e em execu\u00e7\u00e3o.","title":"Pr\u00e9-Requisitos"},{"location":"instalacao.html#instalacao","text":"Nesta etapa considera que todas as demais depend\u00eancias do Sistema Operacional escolhido j\u00e1 foram devidamente instaladas, para consultar quais s\u00e3o elas e o procedimento de instala\u00e7\u00e3o v\u00e1 at\u00e9 a se\u00e7\u00e3o Configura\u00e7\u00e3o Sistema Operacional . Siga estas etapas para configurar o ambiente de desenvolvimento e executar o container com o sistema WPS_LPR: Vers\u00e2o Atual: \"2.7.3\" Baixe a imagem ParkingPlus:WPS_LPR mais recente dispon\u00edvel no resposit\u00f3rio. Arquivos: - ParkingPlus-WPSLPR-2.7.3.tgz - ParkingPlus-WPSLPR-2.7.3_cpu.tgz","title":"Instala\u00e7\u00e3o"},{"location":"instalacao.html#gerar-token-para-autenticacao","text":"OAuth Playground","title":"Gerar token para autentica\u00e7\u00e3o:"},{"location":"instalacao.html#escolher-a-api","text":"Cloud Storage API v1 https://www.googleapis.com/auth/devstorage.read_only Clique em Authorize API . Escolha sua conta da wps-sa . Clique em Exchange authorization code for tokens . Copie o Access Token e substitua em access_token na chamada do curl abaixo. Ou crie um variavel de ambiente com o conte\u00fado, token.","title":"Escolher a API:"},{"location":"instalacao.html#parametros-para-download-da-imagem","text":"BUCKET_NAME : lpr-wps-v1 OBJECT_NAME : nome do arquivo (ex.: ParkingPlus-WPSLPR-2.7.0.tgz ) SAVE_TO_LOCATION : local onde deseja salvar o arquivo curl -X GET \\ -H \"Authorization: Bearer <access_token>\" \\ -o \"<SAVE_TO_LOCATION>\" \\ \"https://storage.googleapis.com/storage/v1/b/<BUCKET_NAME>/o/<OBJECT_NAME>?alt=media\"","title":"Par\u00e2metros para download da imagem"},{"location":"instalacao.html#exemplo-de-uso","text":"curl -X GET \\ -H \"Authorization: Bearer $token\" \\ -o \"/instalacoes/ParkingPlus-WPSLPR-2.7.3.tgz\" \\ \"https://storage.googleapis.com/storage/v1/b/lpr-wps-v1/o/ParkingPlus-WPSLPR-2.7.3.tgz?alt=media\"","title":"Exemplo de Uso"},{"location":"instalacao.html#instalacao-de-pacotes-necessarios","text":"","title":"Instala\u00e7\u00e3o de pacotes necess\u00e1rios"},{"location":"instalacao.html#instale-o-python311-ubuntu","text":"sudo apt install python3.11","title":"Instale o python3.11 (Ubuntu)"},{"location":"instalacao.html#instale-o-pkplus-cli-ubuntu","text":"wget https://intranet.parkingplus.com.br/pub/Parking%20Plus/pkplus-cli/3.0.0/pkplus-cli_3.0.0-1_all.deb \\ --no-check-certificate --http-user='seu_usuario' --ask-password apt install ./pkplus-cli_3.0.0-1_all.deb mkdir -p /var/lib/pkplus-svc Carregue a imagem com o pkplus-cli (dispon\u00edvel para Ubuntu, e CentOS7 sem GPU ) pkplus-cli svc import-file ParkingPlus:WPSLPR-x.y.z.tgz Nas vers\u00f5es com CentOS7 com GPU importe o tgz. \ud83d\udc4d P.S caso seja a vers\u00e3o CPU, o pkplus-cli \u00e9 capaz de rod\u00e1-la tamb\u00e9m tar -xf ParkingPlus:WPSLPR-x.y.z.tgz docker load -i images.tar Ap\u00f3s a importa\u00e7\u00e3o inicie a imagem com pkplus-cli pkplus-cli svc enable ParkingPlus:WPSLPR:x.y.z No CentOS docker-compose up -d \u26a0\ufe0f Aten\u00e7\u00e3o! Caso ap\u00f3s executar o container receba um erro de: unknown or invalid runtime name: nvidia , consulte a se\u00e7\u00e3o configura\u00e7\u00e3o do daemon do docker . Ao iniciar o container, o sistema j\u00e1 estar\u00e1 em funcionamento, lendo o arquivo config.json , para executar as c\u00e2meras cadastradas, para adicionar, alterar ou remover c\u00e2meras, siga para a pr\u00f3xima se\u00e7\u00e3o.","title":"Instale o pkplus-cli (Ubuntu)"},{"location":"instalacao_mqtt.html","text":"Configura\u00e7\u00e3o ParkingPlus-MQTT Pr\u00e9-Requisitos Sistema operacional instalado e configurado. Instala\u00e7\u00e3o Nesta etapa considera que todas as demais depend\u00eancias do Sistema Operacional escolhido j\u00e1 foram devidamente instaladas, para consultar quais s\u00e3o elas e o procedimento de instala\u00e7\u00e3o v\u00e1 at\u00e9 a se\u00e7\u00e3o Configura\u00e7\u00e3o Sistema Operacional . Siga estas etapas para importar a imagem do ParkingPLUS-MQTT: Vers\u00e2o Atual: \"1.0.0\" \u26a0\ufe0f Aten\u00e7\u00e3o Essa imagem n\u00e3o \u00e9 retrocompat\u00edvel com outras vers\u00f5es, caso deseje voltar para uma vers\u00e3o anterior, o ParkingPlus-MQTT precisa ser desabilitado. Baixe a imagem ParkingPlus:MQTT mais recente dispon\u00edvel no resposit\u00f3rio. Arquivos: - ParkingPlus-MQTT-1.0.0.tgz Gerar token para autentica\u00e7\u00e3o: OAuth Playground Escolher a API: Cloud Storage API v1 https://www.googleapis.com/auth/devstorage.read_only Clique em Authorize API . Escolha sua conta da wps-sa . Clique em Exchange authorization code for tokens . Copie o Access Token e substitua em access_token na chamada do curl abaixo. Ou crie um variavel de ambiente com o conte\u00fado, token. Par\u00e2metros para download da imagem BUCKET_NAME : lpr-wps-v1 OBJECT_NAME : nome do arquivo (ex.: ParkingPlus-MQTT-1.0.0.tgz ) SAVE_TO_LOCATION : local onde deseja salvar o arquivo curl -X GET \\ -H \"Authorization: Bearer <access_token>\" \\ -o \"<SAVE_TO_LOCATION>\" \\ \"https://storage.googleapis.com/storage/v1/b/<BUCKET_NAME>/o/<OBJECT_NAME>?alt=media\" Exemplo de Uso curl -X GET \\ -H \"Authorization: Bearer $token\" \\ -o \"/instalacoes/ParkingPlus-MQTT-1.0.0.tgz\" \\ \"https://storage.googleapis.com/storage/v1/b/lpr-wps-v1/o/ParkingPlus-MQTT-1.0.0.tgz?alt=media\" Instala\u00e7\u00e3o de pacotes necess\u00e1rios Instale o python3.11 (Ubuntu) Instala\u00e7\u00e3o Python 3.11 Instale o pkplus-cli (Ubuntu) Instala\u00e7\u00e3o pkplus-cli svc Carregue a imagem com o pkplus-cli (dispon\u00edvel para Ubuntu e CentOS7) pkplus-cli svc import-file ParkingPlus-MQTT-1.0.0.tgz Ap\u00f3s a importa\u00e7\u00e3o inicie a imagem do MQTT com pkplus-cli pkplus-cli svc enable ParkingPlus:MQTT:1.0.0 Caixa de Alerta .alert-box { border: 2px solid #ff4c4c; border-radius: 8px; background-color: #2d2f33; color: #ccc; padding: 16px; font-family: Arial, sans-serif; max-width: 800px; margin: 20px 0; } .alert-header { display: flex; align-items: center; background-color: #3b3b3b; padding: 8px 16px; border-radius: 6px 6px 0 0; font-weight: bold; color: #fff; } .alert-header .icon { color: #ff4c4c; font-size: 1.2em; margin-right: 8px; } .alert-content { padding-top: 12px; font-size: 0.95em; line-height: 1.5; } \u2757 CentOS7 O procedimento de instala\u00e7\u00e3o est\u00e1 descrito no manual pr\u00f3prio do sistema operacional , por\u00e9m, caso j\u00e1 esteja instalado, basta importar o arquivo. \u00c9 importante que essa imagem seja importada pelo pkplus-cli, pois ele gerencia as redes do Docker, sem a necessidade de fazer isso manualmente.","title":"Instala\u00e7\u00e3o MQTT"},{"location":"instalacao_mqtt.html#configuracao-parkingplus-mqtt","text":"","title":"Configura\u00e7\u00e3o ParkingPlus-MQTT"},{"location":"instalacao_mqtt.html#pre-requisitos","text":"Sistema operacional instalado e configurado.","title":"Pr\u00e9-Requisitos"},{"location":"instalacao_mqtt.html#instalacao","text":"Nesta etapa considera que todas as demais depend\u00eancias do Sistema Operacional escolhido j\u00e1 foram devidamente instaladas, para consultar quais s\u00e3o elas e o procedimento de instala\u00e7\u00e3o v\u00e1 at\u00e9 a se\u00e7\u00e3o Configura\u00e7\u00e3o Sistema Operacional . Siga estas etapas para importar a imagem do ParkingPLUS-MQTT: Vers\u00e2o Atual: \"1.0.0\"","title":"Instala\u00e7\u00e3o"},{"location":"instalacao_mqtt.html#atencao","text":"Essa imagem n\u00e3o \u00e9 retrocompat\u00edvel com outras vers\u00f5es, caso deseje voltar para uma vers\u00e3o anterior, o ParkingPlus-MQTT precisa ser desabilitado. Baixe a imagem ParkingPlus:MQTT mais recente dispon\u00edvel no resposit\u00f3rio. Arquivos: - ParkingPlus-MQTT-1.0.0.tgz","title":"\u26a0\ufe0f Aten\u00e7\u00e3o"},{"location":"instalacao_mqtt.html#gerar-token-para-autenticacao","text":"OAuth Playground","title":"Gerar token para autentica\u00e7\u00e3o:"},{"location":"instalacao_mqtt.html#escolher-a-api","text":"Cloud Storage API v1 https://www.googleapis.com/auth/devstorage.read_only Clique em Authorize API . Escolha sua conta da wps-sa . Clique em Exchange authorization code for tokens . Copie o Access Token e substitua em access_token na chamada do curl abaixo. Ou crie um variavel de ambiente com o conte\u00fado, token.","title":"Escolher a API:"},{"location":"instalacao_mqtt.html#parametros-para-download-da-imagem","text":"BUCKET_NAME : lpr-wps-v1 OBJECT_NAME : nome do arquivo (ex.: ParkingPlus-MQTT-1.0.0.tgz ) SAVE_TO_LOCATION : local onde deseja salvar o arquivo curl -X GET \\ -H \"Authorization: Bearer <access_token>\" \\ -o \"<SAVE_TO_LOCATION>\" \\ \"https://storage.googleapis.com/storage/v1/b/<BUCKET_NAME>/o/<OBJECT_NAME>?alt=media\"","title":"Par\u00e2metros para download da imagem"},{"location":"instalacao_mqtt.html#exemplo-de-uso","text":"curl -X GET \\ -H \"Authorization: Bearer $token\" \\ -o \"/instalacoes/ParkingPlus-MQTT-1.0.0.tgz\" \\ \"https://storage.googleapis.com/storage/v1/b/lpr-wps-v1/o/ParkingPlus-MQTT-1.0.0.tgz?alt=media\"","title":"Exemplo de Uso"},{"location":"instalacao_mqtt.html#instalacao-de-pacotes-necessarios","text":"","title":"Instala\u00e7\u00e3o de pacotes necess\u00e1rios"},{"location":"instalacao_mqtt.html#instale-o-python311-ubuntu","text":"Instala\u00e7\u00e3o Python 3.11","title":"Instale o python3.11 (Ubuntu)"},{"location":"instalacao_mqtt.html#instale-o-pkplus-cli-ubuntu","text":"Instala\u00e7\u00e3o pkplus-cli svc","title":"Instale o pkplus-cli (Ubuntu)"},{"location":"instalacao_mqtt.html#carregue-a-imagem-com-o-pkplus-cli-disponivel-para-ubuntu-e-centos7","text":"pkplus-cli svc import-file ParkingPlus-MQTT-1.0.0.tgz","title":"Carregue a imagem com o pkplus-cli (dispon\u00edvel para Ubuntu e CentOS7)"},{"location":"instalacao_mqtt.html#apos-a-importacao-inicie-a-imagem-do-mqtt-com-pkplus-cli","text":"pkplus-cli svc enable ParkingPlus:MQTT:1.0.0 Caixa de Alerta .alert-box { border: 2px solid #ff4c4c; border-radius: 8px; background-color: #2d2f33; color: #ccc; padding: 16px; font-family: Arial, sans-serif; max-width: 800px; margin: 20px 0; } .alert-header { display: flex; align-items: center; background-color: #3b3b3b; padding: 8px 16px; border-radius: 6px 6px 0 0; font-weight: bold; color: #fff; } .alert-header .icon { color: #ff4c4c; font-size: 1.2em; margin-right: 8px; } .alert-content { padding-top: 12px; font-size: 0.95em; line-height: 1.5; } \u2757 CentOS7 O procedimento de instala\u00e7\u00e3o est\u00e1 descrito no manual pr\u00f3prio do sistema operacional , por\u00e9m, caso j\u00e1 esteja instalado, basta importar o arquivo. \u00c9 importante que essa imagem seja importada pelo pkplus-cli, pois ele gerencia as redes do Docker, sem a necessidade de fazer isso manualmente.","title":"Ap\u00f3s a importa\u00e7\u00e3o inicie a imagem do MQTT com pkplus-cli"},{"location":"rekognition.html","text":"Manual do m\u00e9todo rekognition para Detec\u00e7\u00e3o de Placa (LPR) e Identifica\u00e7\u00e3o de Ve\u00edculo Este manual descreve o processo de envio de imagens para o endpoint que processa uma imagem e retorna a placa do ve\u00edculo, o tipo de ve\u00edculo, e as coordenadas. O cliente pode enviar a imagem como um arquivo bin\u00e1rio ou codificado em base64, utilizando a chave image no corpo da requisi\u00e7\u00e3o. 1. Introdu\u00e7\u00e3o O endpoint processa uma imagem de um ve\u00edculo utilizando um modelo de Reconhecimento Autom\u00e1tico de Placas (LPR) para extrair a placa, identificar o tipo de ve\u00edculo e retornar as coordenadas do objeto detectado. 2. URL do Endpoint URL: http://ip_wpslpr:5000/cgi-bin/rekognition.cgi M\u00e9todo HTTP: POST 3. Requisitos Headers: Content-Type: multipart/form-data ou application/json 4. Par\u00e2metros da Requisi\u00e7\u00e3o Envio com Bin\u00e1rio (multipart/form-data) Ao utilizar o formato multipart/form-data , a imagem \u00e9 enviada diretamente no corpo da requisi\u00e7\u00e3o, com a chave image . POST /rekognition HTTP/1.1 Host: http://ip_wpslpr:5000/cgi-bin/rekognition.cgi` Content-Type: multipart/form-data { \"image\": <arquivo de imagem em formato bin\u00e1rio> } Envio com Base64 (application/json) Quando a imagem estiver codificada em base64, ela deve ser enviada no formato application/json , usando tamb\u00e9m a chave image . POST /rekognition HTTP/1.1 Host: http://ip_wpslpr:5000/cgi-bin/rekognition.cgi Content-Type: application/json { \"image\": \"<string base64 codificada>\" } 5. Exemplo de Requisi\u00e7\u00e3o Envio de Imagem em Bin\u00e1rio curl -X POST \"http://ip_wpslpr:5000/cgi-bin/rekognition.cgi\" \\ -H \"Content-Type: multipart/form-data\" \\ -F \"image=@carro.jpg\" Envio de Imagem em Base64 curl -X POST \"http://ip_wpslpr:5000/cgi-bin/rekognition.cgi\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD...\" }' 6. Estrutura da Resposta A resposta inclui o timestamp da requisi\u00e7\u00e3o, o tipo de objeto detectado (ex.: carro), as coordenadas do objeto, a placa reconhecida e o n\u00edvel de confian\u00e7a da predi\u00e7\u00e3o. Resposta de Sucesso { \"timestamp\": \"2024-11-07 14:47:28.931\", \"object_type\": \"CAR\", \"coor_object\": { \"xmin\": 183, \"xmax\": 857, \"ymin\": 171, \"ymax\": 558 }, \"plate_number\": \"SDH1I20\", \"confidence\": 1.0, \"car_model\": \"RAM - rampage\" } Respostas de Erro { \"status\": \"400\", \"mensagem\": \"Nenhuma imagem encontrada no formul\u00e1rio\" } { \"status\": \"400\", \"mensagem\": \"Nenhum arquivo selecionado\" } { \"status\": \"400\", \"mensagem\": \"N\u00e3o foi poss\u00edvel decodificar a imagem\" } { \"status\": \"400\", \"mensagem\": \"Nenhuma imagem em base64 encontrada no corpo da solicita\u00e7\u00e3o\" } { \"status\": \"415\", \"mensagem\": \"Tipo de conte\u00fado n\u00e3o suportado\" } 7. Tratamento de Erros 200 OK: Requisi\u00e7\u00e3o processada com sucesso. 400 Bad Request: Erro no formato ou no conte\u00fado da requisi\u00e7\u00e3o. 415 Unsuported Media Type: Erro no formato de M\u00eddia, ou n\u00e3o aceito. 500 Internal Server Error: Erro interno no servidor. 8. Fluxo de Execu\u00e7\u00e3o Cliente \u2192 Envia requisi\u00e7\u00e3o com imagem (Bin\u00e1rio ou Base64) usando a chave 'image' \u2193 Servidor \u2192 Valida o Formato e o Tamanho da Imagem \u2193 Servidor \u2192 Submete Imagem ao Modelo de LPR \u2193 Servidor \u2192 Extrai Placa, Tipo de Ve\u00edculo e Coordenadas \u2193 Servidor \u2192 Retorna Resultado (JSON) 9. Conclus\u00e3o Este manual oferece um guia pr\u00e1tico e claro para envio de imagens ao endpoint, visando obter a placa, tipo de ve\u00edculo e coordenadas. Ao seguir este formato, o cliente pode enviar imagens como bin\u00e1rio ou codificadas em base64, garantindo a flexibilidade de integra\u00e7\u00e3o com diferentes plataformas.","title":"Rekognition"},{"location":"rekognition.html#manual-do-metodo-rekognition-para-deteccao-de-placa-lpr-e-identificacao-de-veiculo","text":"Este manual descreve o processo de envio de imagens para o endpoint que processa uma imagem e retorna a placa do ve\u00edculo, o tipo de ve\u00edculo, e as coordenadas. O cliente pode enviar a imagem como um arquivo bin\u00e1rio ou codificado em base64, utilizando a chave image no corpo da requisi\u00e7\u00e3o.","title":"Manual do m\u00e9todo rekognition para Detec\u00e7\u00e3o de Placa (LPR) e Identifica\u00e7\u00e3o de Ve\u00edculo"},{"location":"rekognition.html#1-introducao","text":"O endpoint processa uma imagem de um ve\u00edculo utilizando um modelo de Reconhecimento Autom\u00e1tico de Placas (LPR) para extrair a placa, identificar o tipo de ve\u00edculo e retornar as coordenadas do objeto detectado.","title":"1. Introdu\u00e7\u00e3o"},{"location":"rekognition.html#2-url-do-endpoint","text":"URL: http://ip_wpslpr:5000/cgi-bin/rekognition.cgi M\u00e9todo HTTP: POST","title":"2. URL do Endpoint"},{"location":"rekognition.html#3-requisitos","text":"Headers: Content-Type: multipart/form-data ou application/json","title":"3. Requisitos"},{"location":"rekognition.html#4-parametros-da-requisicao","text":"","title":"4. Par\u00e2metros da Requisi\u00e7\u00e3o"},{"location":"rekognition.html#envio-com-binario-multipartform-data","text":"Ao utilizar o formato multipart/form-data , a imagem \u00e9 enviada diretamente no corpo da requisi\u00e7\u00e3o, com a chave image . POST /rekognition HTTP/1.1 Host: http://ip_wpslpr:5000/cgi-bin/rekognition.cgi` Content-Type: multipart/form-data { \"image\": <arquivo de imagem em formato bin\u00e1rio> }","title":"Envio com Bin\u00e1rio (multipart/form-data)"},{"location":"rekognition.html#envio-com-base64-applicationjson","text":"Quando a imagem estiver codificada em base64, ela deve ser enviada no formato application/json , usando tamb\u00e9m a chave image . POST /rekognition HTTP/1.1 Host: http://ip_wpslpr:5000/cgi-bin/rekognition.cgi Content-Type: application/json { \"image\": \"<string base64 codificada>\" }","title":"Envio com Base64 (application/json)"},{"location":"rekognition.html#5-exemplo-de-requisicao","text":"","title":"5. Exemplo de Requisi\u00e7\u00e3o"},{"location":"rekognition.html#envio-de-imagem-em-binario","text":"curl -X POST \"http://ip_wpslpr:5000/cgi-bin/rekognition.cgi\" \\ -H \"Content-Type: multipart/form-data\" \\ -F \"image=@carro.jpg\"","title":"Envio de Imagem em Bin\u00e1rio"},{"location":"rekognition.html#envio-de-imagem-em-base64","text":"curl -X POST \"http://ip_wpslpr:5000/cgi-bin/rekognition.cgi\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"image\": \"/9j/4AAQSkZJRgABAQAAAQABAAD...\" }'","title":"Envio de Imagem em Base64"},{"location":"rekognition.html#6-estrutura-da-resposta","text":"A resposta inclui o timestamp da requisi\u00e7\u00e3o, o tipo de objeto detectado (ex.: carro), as coordenadas do objeto, a placa reconhecida e o n\u00edvel de confian\u00e7a da predi\u00e7\u00e3o.","title":"6. Estrutura da Resposta"},{"location":"rekognition.html#resposta-de-sucesso","text":"{ \"timestamp\": \"2024-11-07 14:47:28.931\", \"object_type\": \"CAR\", \"coor_object\": { \"xmin\": 183, \"xmax\": 857, \"ymin\": 171, \"ymax\": 558 }, \"plate_number\": \"SDH1I20\", \"confidence\": 1.0, \"car_model\": \"RAM - rampage\" }","title":"Resposta de Sucesso"},{"location":"rekognition.html#respostas-de-erro","text":"{ \"status\": \"400\", \"mensagem\": \"Nenhuma imagem encontrada no formul\u00e1rio\" } { \"status\": \"400\", \"mensagem\": \"Nenhum arquivo selecionado\" } { \"status\": \"400\", \"mensagem\": \"N\u00e3o foi poss\u00edvel decodificar a imagem\" } { \"status\": \"400\", \"mensagem\": \"Nenhuma imagem em base64 encontrada no corpo da solicita\u00e7\u00e3o\" } { \"status\": \"415\", \"mensagem\": \"Tipo de conte\u00fado n\u00e3o suportado\" }","title":"Respostas de Erro"},{"location":"rekognition.html#7-tratamento-de-erros","text":"200 OK: Requisi\u00e7\u00e3o processada com sucesso. 400 Bad Request: Erro no formato ou no conte\u00fado da requisi\u00e7\u00e3o. 415 Unsuported Media Type: Erro no formato de M\u00eddia, ou n\u00e3o aceito. 500 Internal Server Error: Erro interno no servidor.","title":"7. Tratamento de Erros"},{"location":"rekognition.html#8-fluxo-de-execucao","text":"Cliente \u2192 Envia requisi\u00e7\u00e3o com imagem (Bin\u00e1rio ou Base64) usando a chave 'image' \u2193 Servidor \u2192 Valida o Formato e o Tamanho da Imagem \u2193 Servidor \u2192 Submete Imagem ao Modelo de LPR \u2193 Servidor \u2192 Extrai Placa, Tipo de Ve\u00edculo e Coordenadas \u2193 Servidor \u2192 Retorna Resultado (JSON)","title":"8. Fluxo de Execu\u00e7\u00e3o"},{"location":"rekognition.html#9-conclusao","text":"Este manual oferece um guia pr\u00e1tico e claro para envio de imagens ao endpoint, visando obter a placa, tipo de ve\u00edculo e coordenadas. Ao seguir este formato, o cliente pode enviar imagens como bin\u00e1rio ou codificadas em base64, garantindo a flexibilidade de integra\u00e7\u00e3o com diferentes plataformas.","title":"9. Conclus\u00e3o"}]}